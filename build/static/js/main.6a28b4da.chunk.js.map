{"version":3,"sources":["reducers/filters.js","constants/ActionTypes.js","reducers/auth.js","reducers/index.js","store/index.js","layouts/Home.js","actions/index.js","layouts/Login.js","layouts/dataTable.js","layouts/score.js","components/NavigationBar.js","components/Footer.js","components/FormBox.js","components/SelectQuestion.js","components/InputQuestion.js","components/MultiInput.js","components/MultipleSelect.js","layouts/Form.js","layouts/HealthCondition.js","layouts/Success.js","components/SelectPlace.js","layouts/Person.js","components/AlignmentChart.js","components/PyChart.js","App.js","serviceWorker.js","index.js"],"names":["filtersReducerDefaultState","sortBy","filtersReducer","state","action","type","sort_by","initialState","isLogin","data","CSV","scores","appReducer","combineReducers","auth","map","row","index","no","score","this","currentUser","role","filters","rootReducer","undefined","persistedState","serializedState","localStorage","getItem","JSON","parse","e","console","log","loadFromLocalStorage","store","createStore","compose","applyMiddleware","thunkMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","subscribe","stringify","setItem","saveToLocalStorage","getState","CTALink","styled","Link","Home","t","useTranslation","className","to","alt","src","questions","getScore","dispatch","axios","post","then","res","scoreData","liveInHome","Object","assign","question","key","push","houseMaterial","floor","roof","bathroom","water","cooking","asset","symptomsType","suffering","mainSourceIncome","allIPS","businessSituation","businessStrategy","expectIPSHeadingCompany","loseJobHeadingCompany","workplaceHeadingCompany","expectIPSWhatCategoryDoes","loseJobWhatCategoryDoes","workplaceWhatCategoryDoes","areYou","instruments","suspectedCaseMedicalCenter","unemployedPeriod","produceFood","catch","err","Copyright","Typography","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","mapDispatchToProps","login","success","location","connect","classes","useState","email","setEmail","password","setPassword","Container","component","maxWidth","onSubmit","evt","preventDefault","CssBaseline","Avatar","noValidate","TextField","onChange","target","value","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","Box","mt","Datatable","props","str","charAt","toUpperCase","slice","i","length","columns","Header","Capitalize","toString","accessor","Cell","style","textAlign","CSVData","marginLeft","marginBottom","padding","border","defaultPageSize","showPagination","Component","updateScores","updateData","updateArray","weight","setState","updateScore","toast","myData","No","answer","valueEn","renderEditable","cellInfo","contentEditable","suppressContentEditableWarning","onBlur","innerHTML","flag","newArray","dangerouslySetInnerHTML","__html","column","editable","onClick","sortable","NavLink","TitleHide","span","logout","show","setShow","i18n","paddingRight","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","rel","aria-hidden","maxHeight","paddingLeft","i18nKey","FdbBox","div","FdbBlock","section","FormBox","children","overflow","title","titleList","subTitle","options","error","selectedValue","find","option","customStyles","base","boxShadow","selectProps","transition","transitionProperty","isSearchable","styles","placeholder","multiline","rows","isMulti","Form","filledState","sequence","setFormState","createDefaultStates","list","defaultState","reduce","obj","item","useReducer","newState","status","setStatus","errors","setErrors","nextQuestion","q","indexOf","valuesToReset","hide","handleQuestion","cbOrNextQ","handleSubmit","a","commentMayerWorkCategory","commentMayerHeadingCompany","commentMayerWhatCategoryDoes","commentMayerAreYou","commentMayerUnemployedPeriod","commentMayerReceiveMoney","Swal","fire","icon","text","result","newErrors","newSurvey","weightVal","entries","forEach","newKey","newVal","j","valueEs","parseInt","changeHouseMembersList","idx","event","afterValue","houseMembersList","oneItem","changeDiseaseMemberList","diseaseMembersList","InputQuestion","firstName","lastName","test","idNumber","gender","cellPhoneNumber","Array","from","_","age","neighborhood","address","oneMember","relation","createMemberList","houseMembers","Table","borderless","responsive","cursor","NativeSelect","inputProps","fontSize","helperText","newAssets","handleAsset","guarani","newSymptomsType","handleSymptomsType","suspectedCase","disease","createDiseaseMembersList","diseaseMembers","regularVisitors","nexStatus","handleMainSourceIncome","workCategory","employeesNumber","layOffEmployees","amountMarchMoney","amountAprilMoney","MultiInput","headingCompany","guaraniEnterHeadingCompany","shareWorkplaceHeadingCompany","whatCategoryDoes","guaraniEnterWhatCategoryDoes","shareWorkplaceWhatCategoryDoes","medicalCenterServing","surviveMoney","receiveMoney","spendDrugs","HealthCondition","progress","MultipleSelect","header","Justify","ProgressBar","Progress","aria-valuenow","aria-valuemin","aria-valuemax","height","RedBox","Disclaimer","Success","isYes","symptoms","risk","exposure","msg","others","bar","medical","config","animationData","checkData","speed","m","onCoords","autocomplete","useRef","geocoder","current","google","maps","places","AutocompleteService","Geocoder","debouncedGetPlacePredictions","useCallback","debounce","input","callback","getPlacePredictions","types","componentRestrictions","country","predictions","prediction","place_id","description","loadOptions","defaultOptions","selected","geocode","placeId","bounds","geometry","toJSON","isClearable","noOptionsMessage","inputValue","Person","disabledButton","setDisabledButton","submitError","setSubmitError","handleCoords","postForm","checkErrors","errorPresent","serious","phone","SelectPlace","disabled","PureComponent","React","use","LanguageDetector","initReactI18next","init","defaultNS","fallbackNS","resources","es","fallbackLng","debug","process","interpolation","escapeValue","ScrollToTop","formReset","history","useHistory","useEffect","unlisten","listen","scrollTo","App","setForm","symptomsTypes","all","diseases","mem","assets","houseMembersLists","diseaseMembersLists","path","exact","Login","Admin","Score","level","Protected","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6a28b4da.chunk.js","sourcesContent":["import * as types from '../constants/ActionTypes'\r\n\r\n\r\nconst filtersReducerDefaultState = {\r\n\r\n    sortBy: \"\",\r\n\r\n\r\n};\r\n\r\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\r\n    // console.log('Action Result');\r\n    // console.log(action);\r\n    switch (action.type) {\r\n        case types.SORT_BY:\r\n            return {\r\n                ...state,\r\n                sortBy: action.sort_by\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filtersReducer;","//user\r\n\r\nexport const AUTH_USER = 'AUTH_USER';\r\nexport const UNAUTH_USER = 'UNAUTH_USER';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const ALL_USER = 'ALL_USER';\r\nexport const USER_DELETE = 'USER_DELETE';\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_ERROR = 'USER_ERROR';\r\nexport const SORT_BY = 'SORT_BY'\r\nexport const GET_SURVEY = 'GET_SURVEY'\r\nexport const GET_CSV = 'GET_CSV';\r\nexport const GET_SCORE = 'GET_SCORE'\r\nexport const UPDATE_SCORE = 'UPDATE_SCORE'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    AUTH_USER,\r\n    UNAUTH_USER,\r\n    GET_SURVEY,\r\n    GET_CSV,\r\n    GET_SCORE,\r\n    UPDATE_SCORE\r\n\r\n} from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n    isLogin:false,\r\n    data:[],\r\n    CSV:[],\r\n    scores:[]\r\n\r\n\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_SCORE:\r\n            const  newData=[]\r\n            action.data.map((row,index) => {\r\n                state.scores[row.no] = row.score\r\n            })\r\n             return { ...state, scores: this.state.scores}\r\n        case GET_SCORE:\r\n            return { ...state, scores: action.score}\r\n        case GET_CSV:\r\n            return { ...state, CSV: action.data}\r\n        case GET_SURVEY:\r\n            return { ...state, data: action.data}\r\n        case AUTH_USER:\r\n            return { ...state, isLogin: action.isLogin}\r\n        case UNAUTH_USER:\r\n            return { ...state, currentUser: null, isLogin: false, role:\"Customer\" }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\n\r\n// Import custom components\r\n\r\nimport filtersReducer from './filters';\r\nimport auth from './auth';\r\n\r\n\r\nconst appReducer = combineReducers({\r\n    auth:auth,\r\n    filters:filtersReducer,\r\n\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === 'USER_LOGOUT') {\r\n      state = undefined\r\n    }  \r\n    return appReducer(state, action)\r\n  }\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\n// middlewares\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\n// Import custom components\r\nimport rootReducer from '../reducers';\r\n\r\n\r\nfunction saveToLocalStorage(state) {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serializedState)\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n    try {\r\n        const serializedState = localStorage.getItem('state')\r\n        if(serializedState === null) return undefined\r\n        return JSON.parse(serializedState)\r\n    }catch (e) {\r\n        console.log(e)\r\n        return undefined\r\n    }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\n/**\r\n * Create a Redux store that holds the app state.\r\n */\r\nconst store = createStore(rootReducer, persistedState, compose(\r\n    applyMiddleware(thunkMiddleware),\r\n\r\n    //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\r\n        return f;\r\n    }\r\n));\r\n\r\nconst unsubscribe = store.subscribe(() => {\r\n    const state = store.getState();\r\n    saveToLocalStorage(state);\r\n});\r\n\r\nexport default store;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { useTranslation } from 'react-i18next'\nimport { Trans } from 'react-i18next'\n\nimport styled from 'styled-components'\n\nconst CTALink = styled(Link)`\n  &:hover i {\n    padding-left: 20px;\n  }\n  & i {\n    padding-left: 5px;\n    transition: all 0.5s ease;\n  }\n  background-color: #bf215b;\n  border-color: #bf215b;\n`\n\nconst Home = () => {\n  const { t } = useTranslation('home')\n\n  return (\n    <header className=\"fdb-block\">\n      <div className=\"container\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-12 col-lg-6 col-xl-5\">\n            <h2>{t('leadTitle')}</h2>\n            <p>{t('leadSecondary')}</p>\n            {/* <ul style={{ color: '#8892a0' }}>\n              <li>{t('listFirst')}</li>\n              <li>\n                <Trans i18nKey=\"home:listSecond\">\n                  Mirá los datos estadísticos que ya juntamos&nbsp;\n                  <Link to=\"/stats\">aquí</Link>.\n                </Trans>\n              </li>\n            </ul> */}\n            <p className=\"mt-4\">\n              <CTALink className=\"btn btn-secondary\" to=\"/report\">\n                {t('ctaCheckSymptoms')}\n                <i className=\"fas fa-arrow-right ml-1\"></i>\n              </CTALink>\n            </p>\n          </div>\n          <div className=\"col-12 col-md-8 col-lg-6 m-auto mr-lg-0 ml-lg-auto pt-5 pt-lg-0 d-lg-block d-none\">\n            <img alt=\"Hero Graphic\" className=\"img-fluid\" src=\"/img/background.png\" />\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Home\n","import * as types from '../constants/ActionTypes'\r\nimport axios from 'axios';\r\nimport { BASIC_URL } from '../config/config';\r\nimport { object } from '@storybook/addon-knobs';\r\n// axios.defaults.baseURL = BASIC_URL;\r\n\r\nconst questions = [\"You live in a home:\",\r\n                    \"Your house is built with:\",\r\n                    \"The floor of your home is:\",\r\n                    \"The roof of your home is:\",\r\n                    \"Your bathroom is:\",\r\n                    \"Water they consume is:\",\r\n                    \"Cooking uses:\",\r\n                    \"Home has:\",\r\n                    \"Vos or any of the people living in your house have any of these symptoms?\",\r\n                    \"Any person living in your home suffers from a disability?\",\r\n                    \"What the person is engaged with the main source of income from your home?\",\r\n                    \"Are they all in IPS?\",\r\n                    \"Due to the situation created by the corona virus. Your Business:\",\r\n                    \"How your business will face this situation?\",\r\n                    \"Do you expect IPS?\",\r\n                    \"You think you can lose your job for the coronavirus?\",\r\n                    \"Once you finish the quarantine. Will you still going to your workplace?\",\r\n                    \"Do you expect IPS?\",\r\n                    \"You think you can lose your job for the coronavirus?\",\r\n                    \"Once you finish the quarantine. Will you still going to your workplace?\",\r\n                    \"Are you:\",\r\n                    \"Do they have there with all instruments necessary biosafety? (Gloves, dust mask, gown, etc.)\",\r\n                    \"Is there any suspected case of coronavirus in your medical center?\" ,\r\n                    \"How long have become unemployed?\",\r\n                    \"You can produce their own food?\"]\r\n\r\nexport const login = (data) => dispatch => {\r\n    console.log(data)\r\n    axios\r\n        .post(BASIC_URL + \"/login\", data)\r\n        .then(res => {\r\n            if(res.data.success === true) {\r\n                localStorage.setItem(\"isLogin\", true);\r\n                dispatch({\r\n                    type: types.AUTH_USER,\r\n                    isLogin:res.data.success\r\n                })\r\n                window.location = '/admin'\r\n\r\n            } else {\r\n                localStorage.setItem(\"isLogin\", false);\r\n                dispatch({\r\n                    type: types.AUTH_USER,\r\n                    isLogin:res.data.success\r\n\r\n                })              \r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getCSV = () => dispatch => {\r\n    axios\r\n        .post(\"/exportCSV\")\r\n        .then(res => {\r\n                dispatch({\r\n                    type: types.GET_CSV,\r\n                    data:res.data\r\n                })\r\n\r\n\r\n\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const updateScore = (data) => dispatch => {\r\n    axios\r\n        .post(\"/updateScore\",data)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.UPDATE_SCORE,\r\n                data:data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getScore = () => dispatch => {\r\n    axios\r\n        .post(\"/getScore\")\r\n        .then(res => {\r\n            console.log(res.data.data)\r\n            var scores = res.data.data;\r\n            var scoreData = [];\r\n            scores.liveInHome.map((row,index) => {\r\n                Object.assign(row,{question:questions[0]})\r\n                                Object.assign(row,{key:\"liveInHome\"})\r\n                scoreData.push(row);\r\n            })\r\n            scores.houseMaterial.map((row,index) => {\r\n                Object.assign(row,{question:questions[1]})\r\n                                Object.assign(row,{key:\"houseMaterial\"})\r\n                scoreData.push(row);\r\n            })\r\n            scores.floor.map((row,index) => {\r\n                Object.assign(row,{question:questions[2]})\r\n                                Object.assign(row,{key:\"floor\"})\r\n                scoreData.push(row);\r\n            })\r\n            scores.roof.map((row,index) => {\r\n                Object.assign(row,{question:questions[3]})\r\n                                Object.assign(row,{key:\"roof\"})\r\n                scoreData.push(row);\r\n\r\n            })\r\n            scores.bathroom.map((row,index) => {\r\n                Object.assign(row,{question:questions[4]})\r\n                                Object.assign(row,{key:\"bathroom\"})\r\n                scoreData.push(row);\r\n      \r\n            })\r\n            scores.water.map((row,index) => {\r\n                Object.assign(row,{question:questions[5]})\r\n                                Object.assign(row,{key:\"water\"})\r\n                scoreData.push(row);\r\n            \r\n            })\r\n            scores.cooking.map((row,index) => {\r\n                Object.assign(row,{question:questions[6]})\r\n                                Object.assign(row,{key:\"cooking\"})\r\n                scoreData.push(row);\r\n\r\n            })\r\n            scores.asset.map((row,index) => {\r\n                Object.assign(row,{question:questions[7]})\r\n                                Object.assign(row,{key:\"asset\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.symptomsType.map((row,index) => {\r\n                Object.assign(row,{question:questions[8]})\r\n                                Object.assign(row,{key:\"symptomsType\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.suffering.map((row,index) => {\r\n                Object.assign(row,{question:questions[9]})\r\n                                Object.assign(row,{key:\"suffering\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.mainSourceIncome.map((row,index) => {\r\n                Object.assign(row,{question:questions[10]})\r\n                                Object.assign(row,{key:\"mainSourceIncome\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.allIPS.map((row,index) => {\r\n                Object.assign(row,{question:questions[11]})\r\n                                Object.assign(row,{key:\"allIPS\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.businessSituation.map((row,index) => {\r\n                Object.assign(row,{question:questions[12]})\r\n                                Object.assign(row,{key:\"businessSituation\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.businessStrategy.map((row,index) => {\r\n                Object.assign(row,{question:questions[13]})\r\n                                Object.assign(row,{key:\"businessStrategy\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.expectIPSHeadingCompany.map((row,index) => {\r\n                Object.assign(row,{question:questions[14]})\r\n                                Object.assign(row,{key:\"expectIPSHeadingCompany\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.loseJobHeadingCompany.map((row,index) => {\r\n                Object.assign(row,{question:questions[15]})\r\n                                Object.assign(row,{key:\"loseJobHeadingCompany\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.workplaceHeadingCompany.map((row,index) => {\r\n                Object.assign(row,{question:questions[16]})\r\n                                Object.assign(row,{key:\"workplaceHeadingCompany\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.expectIPSWhatCategoryDoes.map((row,index) => {\r\n                Object.assign(row,{question:questions[17]})\r\n                                Object.assign(row,{key:\"expectIPSWhatCategoryDoes\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.loseJobWhatCategoryDoes.map((row,index) => {\r\n                Object.assign(row,{question:questions[18]})\r\n                                Object.assign(row,{key:\"loseJobWhatCategoryDoes\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.workplaceWhatCategoryDoes.map((row,index) => {\r\n                Object.assign(row,{question:questions[19]})\r\n                                Object.assign(row,{key:\"workplaceWhatCategoryDoes\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.areYou.map((row,index) => {\r\n                Object.assign(row,{question:questions[20]})\r\n                                Object.assign(row,{key:\"areYou\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.instruments.map((row,index) => {\r\n                Object.assign(row,{question:questions[21]})\r\n                                Object.assign(row,{key:\"instruments\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.suspectedCaseMedicalCenter.map((row,index) => {\r\n                Object.assign(row,{question:questions[22]})\r\n                                Object.assign(row,{key:\"suspectedCaseMedicalCenter\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.unemployedPeriod.map((row,index) => {\r\n                Object.assign(row,{question:questions[23]})\r\n                                Object.assign(row,{key:\"unemployedPeriod\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n            scores.produceFood.map((row,index) => {\r\n                Object.assign(row,{question:questions[24]})\r\n                                Object.assign(row,{key:\"produceFood\"})\r\n                scoreData.push(row);\r\n                    \r\n            })\r\n                dispatch({\r\n                    type: types.GET_SCORE,\r\n                    score:scoreData\r\n                })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getSurveyData = () => dispatch => {\r\n    axios\r\n        .post(\"/getSurveyData\")\r\n        .then(res => {\r\n            console.log(res)\r\n            if(res.data.success === true) {\r\n                var data = res.data.data;\r\n                var symptomsTypes = '';\r\n                var asset = '';\r\n                var all = '';\r\n                var diseases = '';\r\n                data.map((row,index) => {            \r\n                    for(let i = 0 ; i < row.symptomsType.length ; i++){\r\n                        symptomsTypes = symptomsTypes + row.symptomsType[i] +\",\"\r\n                    }\r\n                    for(let i = 0 ; i < row.asset.length ; i++){\r\n                        asset = asset + row.asset[i] +\",\"\r\n                    }\r\n                    for(let i = 0 ; i < row.houseMembersList.length ; i++){\r\n                        var mem = row.houseMembersList[i].relation + \"-\" + row.houseMembersList[i].age\r\n                        all = all + mem + \",\"\r\n                    }\r\n                    for( let i = 0 ; i < row. diseaseMembersList.length ; i++){\r\n                        var disease = row. diseaseMembersList[i].relation + \"-\" + row. diseaseMembersList[i].age +\"-\"+ row. diseaseMembersList[i].disease \r\n                        diseases = diseases + disease + \",\"\r\n                    }\r\n                    Object.assign(row,{symptomsTypes:symptomsTypes})\r\n                    Object.assign(row,{assets:asset})\r\n                    Object.assign(row,{houseMembersLists:all})\r\n                    Object.assign(row,{diseaseMembersLists:diseases})\r\n                })\r\n                dispatch({\r\n                    type: types.GET_SURVEY,\r\n                    data:data\r\n                })\r\n\r\n            } else {                \r\n                // dispatch({\r\n                //     type: types.AUTH_USER,\r\n                //     isLogin:res.data.success\r\n\r\n                // })              \r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\n\r\n\r\nexport function logout() {\r\n    return function (dispatch) {\r\n        localStorage.setItem(\"isLogin\",false);\r\n        dispatch({type:types.AUTH_USER,isLogin:false})\r\n        window.location = '/'\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useState,useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/index\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport function SignIn({isLogin,login}) {\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const emailChange = (e) =>{\n        setEmail(e.target.value)\n    }\n    const passChange = (e) =>{\n        setPassword(e.target.value)\n    }\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        let data = {\n            email:email,\n            password:password\n        }\n        login(data)\n    }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" onSubmit={handleSubmit}>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            onChange={emailChange}\n            value={email}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            value={password}\n            onChange={passChange}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => ({\n    login: state.auth.isLogin\n  });\n  \n  const mapDispatchToProps = { login };\n  \n  export default connect( mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component, Fragment } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport {connect} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { BASIC_URL } from '../config/config';\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\n\nexport class Datatable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: this.props.data\n        }\n    }\n    Capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n    render() {\n        const { data } = this.state\n        for(var i = 0; i < data.length; i++) {\n            delete data[i]['asset'];\n            delete data[i]['houseMembersList'];\n            delete data[i]['diseaseMembersList'];\n            delete data[i]['end'];\n            delete data[i]['__v'];\n            delete data[i]['_id'];\n            delete data[i]['symptomsType']\n        }\n        console.log(data)\n        const columns = [];\n        for (var key in data[0]) {\n\n            let editable = null\n            let width = 200\n            let visible = {\n                textAlign: 'center'\n            }\n\n            columns.push(\n                {\n                    Header: <b>{this.Capitalize(key.toString())}</b>,\n                    accessor: key,\n                    Cell: editable,\n                    style: visible,\n                    width:width\n                });\n        }\n        console.log(columns)\n\n\n        return (\n            <Fragment>\n                <CSVLink data={this.props.CSVData} style={{marginLeft:\"30px\",marginBottom:\"10px\",padding:\"10px\",border:\"1px solid blue\",color:\"blue\"}}>Download EXCEL</CSVLink>\n                <div style={{marginTop:\"20px\"}}>\n                    <ReactTable\n                        data={data}\n                        columns={columns}\n                        defaultPageSize={10}\n                        className={'-striped -highlight'}\n                        showPagination={true}\n                    />\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.auth.data,\n    CSVData:state.auth.CSV\n\n})\n\nexport default connect(\n    mapStateToProps,{}\n)(Datatable)","import React, { Component, Fragment } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport {connect} from 'react-redux';\nimport { updateScore ,getScore } from '../actions/index'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nexport class Datatable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: this.props.scores,\n            updateArray:[]\n        }\n    }\n    componentWillMount(){\n        this.props.getScore();\n    }\n\n    Capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n    updateScores = () =>{\n        var updateData = []\n        this.state.updateArray.map((row,index) =>{\n            this.state.data[row.no].weight = row.score\n            this.setState({data:this.state.data})\n        })\n        for (let i = 0 ; i < this.state.updateArray.length ; i++){\n            updateData[i] = this.state.data[this.state.updateArray[i].no];\n            updateData[i].weight = this.state.updateArray[i].score\n        }\n        this.props.updateScore(updateData);\n        toast.success(\"Successfully updated !\")\n    \n        \n    }\n    render() {\n        const { data } = this.state\n        var myData = [];\n        for(let i = 0 ; i < data.length; i++){\n            let row;\n            row = {\n                No:i+1,\n                question:data[i].question,\n                answer:data[i].valueEn,\n                score:data[i].weight    \n\n            }\n            myData.push(row);\n        }   \n        const renderEditable = (cellInfo) => {\n            return (\n                <div\n                    style={{ backgroundColor: \"#fafafa\" }}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onBlur={e => {\n                        console.log(cellInfo)\n                        const data = {\n                            no : cellInfo.index.toString(),\n                            score : e.target.innerHTML\n                        }\n                        var flag=false;\n                        // this.setState({updateArray:this.state.updateArray.push(data)})\n                        var newArray = this.state.updateArray;\n                        for( let i = 0 ; i < newArray.length ; i++){\n                            if(newArray[i].no === data.no){\n                                newArray[i].score = data.score\n                                flag = true\n                            }\n\n                        }\n                        if(flag === false){\n                            newArray.push(data)\n                        }\n                        \n                        this.setState({updateArray:newArray})\n                        console.log(this.state.updateArray)\n                        \n                        // const data = [...this.state.myData];\n                        // myData[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n                        // this.setState({ myData: data });\n                    }}\n                    dangerouslySetInnerHTML={{\n                        __html: myData[cellInfo.index][cellInfo.column.id]\n                    }}\n                />\n            );\n        }\n        const columns = [];\n        for (var key in myData[0]) {\n\n            let editable = renderEditable\n            let width = 200\n            let visible = {\n                textAlign: 'center'\n            }\n            if(key === \"No\"){\n                editable = null\n            }\n            if(key === \"question\"){\n                editable = null\n                width= 600\n            }\n            if(key === \"answer\"){\n                editable = null\n                width= 600\n            }\n \n\n            columns.push(\n                {\n                    Header: <b>{this.Capitalize(key.toString())}</b>,\n                    accessor: key,\n                    Cell: editable,\n                    style: visible,\n                    width:width\n                });\n\n        }\n        columns.push(\n            {\n                Header: <button className=\"btn btn-primary btn-sm btn-delete mb-0 b-r-4\"\n                    onClick={\n                        (e) => {                            \n                                this.updateScores()\n                        }}>Update</button>,\n                id: 'update',\n                accessor: str => \"update\",\n                sortable: false,\n                style: {\n                    textAlign: 'center'\n                },\n                Cell: (row) => (\n                    <div>\n                        <span >\n                        </span>\n                    </div>\n                ),\n                accessor: key,\n                style: {\n                    textAlign: 'center'\n                }\n            }\n        )\n\n        return (\n            <Fragment>\n                <ReactTable\n                    data={myData}\n                    columns={columns}\n                    defaultPageSize={20}\n                    className={'-striped -highlight'}\n                    showPagination={true}\n                />\n                <ToastContainer />\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    scores: state.auth.scores,\n\n})\n\nexport default connect(\n    mapStateToProps,{updateScore,getScore}\n)(Datatable)","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from \"react-redux\";\nimport { logout } from \"../actions/index\";\n\nconst NavLink = styled(Link)`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: #fd8c25 !important;\n  &.text-primary:hover {\n    color: #9c1b4a !important;\n  }\n`\n\nconst TitleHide = styled.span`\n  @media (max-width: 375px) {\n    display: none;\n  }\n`\n\nexport const NavigationBar = ({isLogin,logout}) => {\n  const [show, setShow] = useState(false)\n  const [showLangSwitch, setShowLangSwitch] = useState(false)\n  const { t, i18n } = useTranslation('navbar')\n  return (\n    <header>\n      <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg no-gutters\">\n          <div className=\"col-3 text-left\">\n            <NavLink className=\"navbar-brand text-primary\" to=\"/\">\n              <img\n                src=\"/img/logo.jpg\"\n                alt=\"Encarnacion\"\n                style={{ width: 150, paddingRight: 15 }}\n              />\n               <TitleHide>{t('selfReportingTitle')}</TitleHide>\n            </NavLink>\n          </div>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav4\"\n            aria-controls=\"navbarNav4\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n            onClick={() => setShow(!show)}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div\n            className={`collapse navbar-collapse justify-content-center col-md-8 ${\n              show ? 'show' : ''\n            }`}\n            id=\"navbarNav4\"\n          >\n            <ul className=\"navbar-nav ml-auto\">\n               <li className=\"nav-item\">\n                <Link\n                  className=\"nav-link\"\n                  to=\"/\"\n                  onClick={() => setShow(false)}\n                >\n                  {t('home')}\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  className=\"nav-link\"\n                  to=\"/report\"\n                  onClick={() => setShow(false)}\n                >\n                  {t('selfReporting')}\n                </Link>\n              </li>{\n                \n              }\n\n              {\n                isLogin?\n                <li className=\"nav-item\">\n                <Link\n                  className=\"nav-link\"\n                  to=\"/admin\"\n                  onClick={() => setShow(false)}\n                >\n                  {t('Survey')}\n                </Link>\n              </li>:''       \n              }\n              {\n                isLogin?\n                <li className=\"nav-item\">\n                <Link\n                  className=\"nav-link\"\n                  to=\"/score\"\n                  onClick={() => setShow(false)}\n                >\n                  {t('score')}\n                </Link>\n              </li>:''       \n              }\n              {\n                isLogin?\n                  <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link\"     \n                    onClick={() => logout()}\n                  >\n                    {t('logout')}\n                  </span>\n                </li>:\n                <li className=\"nav-item\">\n                  <Link\n                    className=\"nav-link\"\n                    to=\"/login\"\n                    onClick={() => setShow(false)}\n                  >\n                    {t('login')}\n                  </Link>\n                </li>                \n              }\n\n              \n            </ul>\n          </div>\n        </nav>\n      </div>\n    </header>\n  )\n}\nconst mapStateToProps = state => ({\n  isLogin: state.auth.isLogin\n});\n\nconst mapDispatchToProps = { logout };\n\nexport default connect( mapStateToProps, mapDispatchToProps)(NavigationBar);","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Trans } from 'react-i18next'\n\nconst Footer = () => {\n  const { t } = useTranslation('footer')\n  return (\n    <footer className=\"fdb-block footer-large bg-dark\">\n      <div className=\"container\">\n        <div className=\"row align-items-top text-center text-md-left\">\n          <div className=\"col-12 col-md-4 mt-4 mt-md-0 text-lg-left\">\n            <h3>\n              <strong>{t('followAndContribute')}</strong>\n            </h3>\n            <p>{t('shareText')}</p>\n            <p className=\"lead\">\n              <a\n                href=\"https://twitter.com/penguinstribe\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mx-2\"\n              >\n                <i className=\"fab fa-twitter\" aria-hidden=\"true\" />\n              </a>\n              <a\n                href=\"https://github.com/penguin-academy/covid-19-py\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mx-2\"\n              >\n                <i className=\"fab fa-github\" aria-hidden=\"true\" />\n              </a>\n              <a\n                href=\"mailto:hola@autoreporte.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mx-2\"\n              >\n                <i className=\"fas fa-envelope\" aria-hidden=\"true\" />\n              </a>\n            </p>\n          </div>\n\n          <div className=\"col-12 col-md-5 offset-md-2 mt-5 mt-md-0 text-lg-left\">\n            <h3>\n              <strong>{t('aboutUs')}</strong>\n            </h3>\n            <p>{t('aboutUsText')}</p>\n            <img\n              src=\"/img/hippa.png\"\n              alt=\"Hippa Conform Logo\"\n              style={{ maxHeight: 80 }}\n            />\n            <img\n              src=\"/img/privacyshield.png\"\n              alt=\"Privacy Shield Logo\"\n              style={{ maxHeight: 60, paddingLeft: 20 }}\n            />\n          </div>\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col text-center\">\n            © CovPY 2020 -{' '}\n            <Trans i18nKey=\"footer:madeWithLove\">\n              Hecho con amor\n              <img\n                src=\"/img/heart.svg\"\n                alt=\"Heart\"\n                style={{ padding: '0 10px', maxWidth: 45 }}\n              />\n              en Paraguay\n            </Trans>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport const FooterSmall = () => {\n  return (\n    <footer className=\"fdb-block footer-small bg-dark\">\n      <div className=\"container\">\n        <div className=\"row text-center\">\n          <div className=\"col\">\n            <p>\n              {' '}\n              © CovPY 2020 - Hecho con\n              <img\n                src=\"/img/heart.svg\"\n                alt=\"Heart\"\n                style={{ padding: '0 10px', maxWidth: 45 }}\n              />\n              en Paraguay\n            </p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst FdbBox = styled.div`\n  @media (max-width: 991px) {\n    padding: 0;\n  }\n`\n\nconst FdbBlock = styled.section`\n  background-image: url(/img/bbbb.jpg);\n  padding: 5rem 0 7.5rem 0;\n`\n\nconst FormBox = ({ children }) => {\n  return (\n    <FdbBlock className=\"fdb-block\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12\">\n            <FdbBox className=\"fdb-box\" style={{ overflow: 'visible' }}>\n              {children}\n            </FdbBox>\n          </div>\n        </div>\n      </div>\n    </FdbBlock>\n  )\n}\n\nexport default FormBox\n","import React from 'react'\nimport Select from 'react-select'\nimport { useTranslation } from 'react-i18next'\n\nconst Component = ({\n  title,\n  titleList = [],\n  subTitle,\n  options,\n  onChange,\n  value,\n  error\n}) => {\n  let selectedValue = options.find(option => option.value === value)\n  if (!selectedValue) selectedValue = null\n  const { t } = useTranslation('SelectQuestion')\n\n  const customStyles = {\n    control: (base, { selectProps }) => {\n      const boxShadow = selectProps.error\n        ? { boxShadow: '0 0 0 2px #bf215b' }\n        : {}\n      return {\n        ...base,\n        ...boxShadow,\n        transition: ' 0.25s linear',\n        transitionProperty: 'box-shadow'\n      }\n    }\n  }\n\n  return (\n    <div className=\"row justify-content-center align-items-center\">\n      <div className=\"col-12 col-lg-6\">\n        <p className=\"lead m-lg-0\">{title}</p>\n        {titleList.length ? (\n          <>\n            <ul>\n              {titleList.map(e => (\n                <li>{e}</li>\n              ))}\n            </ul>\n\n            <small className=\"m-lg-0\">{subTitle}</small>\n          </>\n        ) : (\n          <p className=\"m-lg-0\">{subTitle}</p>\n        )}\n      </div>\n      <div className=\"col-12 col-lg-5\">\n        <Select\n          options={[{ value: null, label: `- ${t('default')} -` }, ...options]}\n          isSearchable={false}\n          onChange={onChange}\n          value={selectedValue}\n          styles={customStyles}\n          error={error}\n          placeholder={t('placeholder')}\n        />\n        {error && (\n          <div className=\"invalid-feedback\" style={{ display: 'block' }}>\n            {t('pleaseChoose')}\n          </div>\n        )}\n        {/* <p>selected value: {JSON.stringify(selectedValue, null, 2)}</p> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Component\n","import React from 'react'\n\nimport {\n  TextField \n} from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next'\n\nconst Component = ({\n  title,\n  titleList = [],\n  subTitle,\n  onChange,\n  value,\n  error\n}) => {\n  let selectedValue = value;\n  if (!selectedValue) selectedValue = null\n  const { t } = useTranslation('SelectQuestion')\n\n  const customStyles = {\n    control: (base, { selectProps }) => {\n      const boxShadow = selectProps.error\n        ? { boxShadow: '0 0 0 2px #bf215b' }\n        : {}\n      return {\n        ...base,\n        ...boxShadow,\n        transition: ' 0.25s linear',\n        transitionProperty: 'box-shadow'\n      }\n    }\n  }\n\n  return (\n    <div className=\"row justify-content-center align-items-center\">\n      <div className=\"col-12 col-lg-6\">\n        <p className=\"lead m-lg-0\">{title}</p>\n        {titleList.length ? (\n          <>\n            <ul>\n              {titleList.map(e => (\n                <li>{e}</li>\n              ))}\n            </ul>\n\n            <small className=\"m-lg-0\">{subTitle}</small>\n          </>\n        ) : (\n          <p className=\"m-lg-0\">{subTitle}</p>\n        )}\n      </div>\n      <div className=\"col-12 col-lg-5\">\n        <TextField \n          id=\"outlined-basic\" \n          style={{width: '100%'}}\n          variant=\"outlined\" \n          value={selectedValue}\n          onChange={onChange}\n          error={error}\n          required\n          />\n  \n        {error && (\n          <div className=\"invalid-feedback\" style={{ display: 'block' }}>\n            {t('pleaseChoose')}\n          </div>\n        )}\n        {/* <p>selected value: {JSON.stringify(selectedValue, null, 2)}</p> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Component\n","import React from 'react'\n\nimport {\n  TextField \n} from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next'\n\nconst Component = ({\n  title,\n  titleList = [],\n  subTitle,\n  onChange,\n  value,\n  error\n}) => {\n  let selectedValue = value;\n  if (!selectedValue) selectedValue = null\n  const { t } = useTranslation('SelectQuestion')\n\n  const customStyles = {\n    control: (base, { selectProps }) => {\n      const boxShadow = selectProps.error\n        ? { boxShadow: '0 0 0 2px #bf215b' }\n        : {}\n      return {\n        ...base,\n        ...boxShadow,\n        transition: ' 0.25s linear',\n        transitionProperty: 'box-shadow'\n      }\n    }\n  }\n\n  return (\n    <div className=\"row justify-content-center align-items-center\">\n      <div className=\"col-12 col-lg-6\">\n        <p className=\"lead m-lg-0\">{title}</p>\n        {titleList.length ? (\n          <>\n            <ul>\n              {titleList.map(e => (\n                <li>{e}</li>\n              ))}\n            </ul>\n\n            <small className=\"m-lg-0\">{subTitle}</small>\n          </>\n        ) : (\n          <p className=\"m-lg-0\">{subTitle}</p>\n        )}\n      </div>\n      <div className=\"col-12 col-lg-5\">\n        <TextField \n          multiline\n          rows=\"4\"\n          id=\"outlined-basic\" \n          style={{width: '100%'}}\n          variant=\"outlined\" \n          value={selectedValue}\n          onChange={onChange}\n          // placeholder=\"Type your opinion\"\n          error={error}\n          />\n  \n        {error && (\n          <div className=\"invalid-feedback\" style={{ display: 'block' }}>\n            {t('pleaseChoose')}\n          </div>\n        )}\n        {/* <p>selected value: {JSON.stringify(selectedValue, null, 2)}</p> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Component\n","// import React from 'react';\r\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// import Input from '@material-ui/core/Input';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Select from '@material-ui/core/Select';\r\n// import Chip from '@material-ui/core/Chip';\r\n\r\n// import { useTranslation } from 'react-i18next'\r\n\r\n// const Component = ({\r\n//   title,\r\n//   titleList = [],\r\n//   subTitle,\r\n//   options,\r\n//   onChange,\r\n//   value,\r\n//   error\r\n// }) => {\r\n// //   let selectedValue = options.find(option => option.value === value)\r\n// //   if (!selectedValue) selectedValue = null\r\n//   const { t } = useTranslation('SelectQuestion')\r\n\r\n//   const customStyles = {\r\n//     control: (base, { selectProps }) => {\r\n//       const boxShadow = selectProps.error\r\n//         ? { boxShadow: '0 0 0 2px #bf215b' }\r\n//         : {}\r\n//       return {\r\n//         ...base,\r\n//         ...boxShadow,\r\n//         transition: ' 0.25s linear',\r\n//         transitionProperty: 'box-shadow'\r\n//       }\r\n//     }\r\n//   }\r\n\r\n  \r\n// const useStyles = makeStyles((theme) => ({\r\n//     formControl: {\r\n//       margin: theme.spacing(1),\r\n//       minWidth: 120,\r\n//       maxWidth: 300,\r\n//     },\r\n//     chips: {\r\n//       display: 'flex',\r\n//       flexWrap: 'wrap',\r\n//     },\r\n//     chip: {\r\n//       margin: 2,\r\n//     },\r\n//     noLabel: {\r\n//       marginTop: theme.spacing(3),\r\n//     },\r\n//   }));\r\n  \r\n//   const ITEM_HEIGHT = 48;\r\n//   const ITEM_PADDING_TOP = 8;\r\n//   const MenuProps = {\r\n//     PaperProps: {\r\n//       style: {\r\n//         maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n//         width: 250,\r\n//       },\r\n//     },\r\n//   };\r\n  \r\n//   function getStyles(option, personName, theme) {\r\n//     return {\r\n//       fontWeight:\r\n//         personName.indexOf(option) === -1\r\n//           ? theme.typography.fontWeightRegular\r\n//           : theme.typography.fontWeightMedium,\r\n//     };\r\n//   }\r\n\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n//   const [personName, setPersonName] = React.useState([]);\r\n\r\n//   const handleChange = (event) => {\r\n//     setPersonName(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"row justify-content-center align-items-center\">\r\n//       <div className=\"col-12 col-lg-6\">\r\n//         <p className=\"lead m-lg-0\">{title}</p>\r\n//         {titleList.length ? (\r\n//           <>\r\n//             <ul>\r\n//               {titleList.map(e => (\r\n//                 <li>{e}</li>\r\n//               ))}\r\n//             </ul>\r\n\r\n//             <small className=\"m-lg-0\">{subTitle}</small>\r\n//           </>\r\n//         ) : (\r\n//           <p className=\"m-lg-0\">{subTitle}</p>\r\n//         )}\r\n//       </div>\r\n//       <div className=\"col-12 col-lg-5\">\r\n//         <Select\r\n//           fullWidth\r\n//           labelId=\"demo-mutiple-chip-label\"\r\n//           id=\"demo-mutiple-chip\"\r\n//           multiple\r\n//           value={personName}\r\n//           onChange={handleChange}\r\n//           input={<Input id=\"select-multiple-chip\" />}\r\n//           renderValue={(selected) => (\r\n//             <div className={classes.chips}>\r\n//               {selected.map((value) => (\r\n//                 <Chip key={value} label={value} className={classes.chip} />\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//           MenuProps={MenuProps}\r\n//         >\r\n//           {options.map((option) => (\r\n//             <MenuItem key={option} value={option} style={getStyles(option, personName, theme)}>\r\n//               {option}\r\n//             </MenuItem>\r\n//           ))}\r\n//         </Select>\r\n\r\n//         {error && (\r\n//           <div className=\"invalid-feedback\" style={{ display: 'block' }}>\r\n//             {t('pleaseChoose')}\r\n//           </div>\r\n//         )}\r\n//         {/* <p>selected value: {JSON.stringify(selectedValue, null, 2)}</p> */}\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Component\r\n\r\nimport React from 'react'\r\nimport Select from 'react-select'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst Component = ({\r\n  title,\r\n  titleList = [],\r\n  subTitle,\r\n  options,\r\n  onChange,\r\n  value,\r\n  error\r\n}) => {\r\n  let selectedValue = options.find(option => option.value === value)\r\n  if (!selectedValue) selectedValue = null\r\n  const { t } = useTranslation('SelectQuestion')\r\n\r\n  const customStyles = {\r\n    control: (base, { selectProps }) => {\r\n      const boxShadow = selectProps.error\r\n        ? { boxShadow: '0 0 0 2px #bf215b' }\r\n        : {}\r\n      return {\r\n        ...base,\r\n        ...boxShadow,\r\n        transition: ' 0.25s linear',\r\n        transitionProperty: 'box-shadow'\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"row justify-content-center align-items-center\">\r\n      <div className=\"col-12 col-lg-6\">\r\n        <p className=\"lead m-lg-0\">{title}</p>\r\n        {titleList.length ? (\r\n          <>\r\n            <ul>\r\n              {titleList.map(e => (\r\n                <li>{e}</li>\r\n              ))}\r\n            </ul>\r\n\r\n            <small className=\"m-lg-0\">{subTitle}</small>\r\n          </>\r\n        ) : (\r\n          <p className=\"m-lg-0\">{subTitle}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"col-12 col-lg-5\">\r\n        <Select\r\n          options={[{ value: null, label: `- ${t('default')} -` }, ...options]}\r\n          isMulti\r\n          isSearchable={false}\r\n          onChange={onChange}\r\n          value={selectedValue}\r\n          styles={customStyles}\r\n          error={error}\r\n          placeholder={t('placeholder')}\r\n        />\r\n        {error && (\r\n          <div className=\"invalid-feedback\" style={{ display: 'block' }}>\r\n            {t('pleaseChoose')}\r\n          </div>\r\n        )}\r\n        {/* <p>selected value: {JSON.stringify(selectedValue, null, 2)}</p> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import React, { useState, useReducer, useEffect } from 'react'\n\nimport Question from '../components/SelectQuestion'\nimport InputQuestion from '../components/InputQuestion'\nimport MultiInput from '../components/MultiInput'\nimport FormBox from '../components/FormBox'\nimport { useTranslation } from 'react-i18next'\n\nimport {\n  Table\n} from 'reactstrap';\n\nimport {\n  NativeSelect,\n  TextField,\n} from '@material-ui/core';\n\nimport MultipleSelect from '../components/MultipleSelect'\n\nimport Select from 'react-select'\n\nimport axios from \"axios\";\nimport { BASIC_URL } from '../config/config';\nimport Swal from 'sweetalert2'\n\nconst Form = ({ filledState = {}, setFormState, form }) => {\n  const sequence = [\n    'firstName',\n    'lastName',\n    'idNumber',\n    'gender',\n    'cellPhoneNumber',\n    'age',\n    'neighborhood',\n    'address',\n    'houseMembers',\n    'houseMembersList',\n    'liveInHome',\n    'houseMaterial',\n    'floor',\n    'roof',\n    'bathroom',\n    'water',\n    'cooking',\n    'asset',\n    'guarani',\n    'symptomsType',\n    'suspectedCase',\n    'suffering',\n    'diseaseMembers',\n    'diseaseMembersList',\n    'regularVisitors',\n    'mainSourceIncome',\n    'workCategory',\n    'employeesNumber',\n    'allIPS',\n    'layOffEmployees',\n    'businessSituation',\n    'businessStrategy',\n    'amountMarchMoney',\n    'amountAprilMoney',\n    'headingCompany',\n    'role',\n    'expectIPSHeadingCompany',\n    'loseJobHeadingCompany',\n    'guaraniEnterHeadingCompany',\n    'workplaceHeadingCompany',\n    'shareWorkplaceHeadingCompany',\n    'whatCategoryDoes',\n    'expectIPSWhatCategoryDoes',\n    'loseJobWhatCategoryDoes',\n    'guaraniEnterWhatCategoryDoes',\n    'workplaceWhatCategoryDoes',\n    'shareWorkplaceWhatCategoryDoes',\n    'areYou',\n    'medicalCenterServing',\n    'instruments',\n    'suspectedCaseMedicalCenter',\n    'unemployedPeriod',\n    'produceFood',\n    'surviveMoney',\n    'receiveMoney',\n    'spendDrugs',\n    'commentMayerWorkCategory',\n    'commentMayerHeadingCompany',\n    'commentMayerWhatCategoryDoes',\n    'commentMayerAreYou',\n    'commentMayerUnemployedPeriod',\n    'commentMayerReceiveMoney',\n    'end'\n  ]\n\n  // takes an array of keys returns an object with keys and defaultStates\n  const createDefaultStates = (list, defaultState) =>\n    list.reduce((obj, item) => {\n      obj[item] = defaultState\n      return obj\n    }, {})\n\n  const [status, setStatus] = useReducer(\n    (state, newState) => {\n      return { ...state, ...newState }\n    },\n    {\n      [sequence[0]]: { show: true, answer: '' },\n      ...createDefaultStates(sequence.slice(1), { show: false, answer: '' }),\n      ...filledState\n    }\n  )\n\n  const [errors, setErrors] = useState(createDefaultStates(sequence, false))\n\n  const nextQuestion = (q, ...hide) => {\n    const defaultState = { show: false, answer: '' }\n    const i = sequence.indexOf(q)\n    const valuesToReset = createDefaultStates(sequence.slice(i), defaultState)\n\n    // if present: hide conditional question\n    hide.map(key => (valuesToReset[key] = defaultState))\n\n    setStatus({\n      ...valuesToReset,\n      [q]: { show: true, answer: '' }\n    })\n  }\n\n  const handleQuestion = (q, value, cbOrNextQ) => {\n    if (value === null) return nextQuestion(q)\n\n    setErrors({ ...errors, [q]: false })\n    setStatus({\n      [q]: { show: true, answer: value }\n    })\n    if (cbOrNextQ == null) return\n    else if (typeof cbOrNextQ === 'function'){\n      cbOrNextQ()\n    } \n    else {\n      nextQuestion(cbOrNextQ)\n    }\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    // If all fields are filled.\n    if(!status.commentMayerWorkCategory.show && !status.commentMayerHeadingCompany.show && !status.commentMayerWhatCategoryDoes.show && !status.commentMayerAreYou.show && !status.commentMayerUnemployedPeriod.show && !status.commentMayerReceiveMoney.show ) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error...',\n        text: 'Please fill in all the fields!',\n      })\n      return;\n    }\n\n    var weight;\n    await axios\n      .post(BASIC_URL + \"/getWeight\")\n      .then(res => {\n          if(res.data.success === true) {\n            weight = res.data.result;\n          } else {\n              console.log(\"While getting weights, there was occured unknown errors!\");\n          }\n      })\n\n    const newErrors = errors\n    let errorPresent = false\n    let newSurvey = {};\n    let weightVal = 0;\n    Object.entries(status).forEach(([key, value]) => {\n\n      if(value.show) {\n\n        let newKey = key;\n        let newVal = value.answer;\n\n        // //Avoiding reduplication, integrates some fields to one.\n        // if(status.expectIPSHeadingCompany.show || status.expectIPSWhatCategoryDoes.show) {\n        //   //Integrate two \"expect IPS\" to one.\n        //   newKey = \"expectIPS\";\n        // } else if(status.loseJobHeadingCompany.show || status.loseJobWhatCategoryDoes.show) {\n        //   //Integrate two \"lose job\" to one.\n        //   newKey = \"loseJob\";\n        // } else if(status.guaraniEnterHeadingCompany.show || status.guaraniEnterHeadingCompany.show) {\n        //   //Integrate two \"guarani enter\" to one.\n        //   newKey = \"guaraniEnter\";\n        // } else if(status.workplaceHeadingCompany.show || status.workplaceWhatCategoryDoes.show) {\n        //   //Integrate two \"workplace\" to one.\n        //   newKey = \"workplace\";\n        // } else if(status.shareWorkplaceHeadingCompany.show || status.shareWorkplaceWhatCategoryDoes.show) {\n        //   //Integrate two \"shareWorkplace\" to one.\n        //   newKey = \"shareWorkplace\";\n        // } else if(status.commentMayerWorkCategory.show || status.commentMayerHeadingCompany.show || status.commentMayerWhatCategoryDoes.show || status.commentMayerAreYou.show || status.commentMayerUnemployedPeriod.show || status.commentMayerReceiveMoney.show ) {\n        //     //Integtrate 6 \"comment mayer\" to one.\n        //     newKey = \"commentMayer\";\n        // }\n\n        newSurvey = { ...newSurvey, [newKey]: newVal}\n\n        //Calculate the weight value.\n        if(weight[key] !== undefined) {\n\n          //if \"key\" is \"asset\" or \"symptomsType\", in other words multiple choice.\n          // asset weight is the sum of sub-assets weight.\n          if( key === \"asset\" || key === \"symptomsType\") {\n            for(let i = 0 ; i < weight[key].length ; i ++) {\n              for( let j = 0 ; j < value.answer.length ; j ++ ) {\n                if(weight[key][i].valueEs === value.answer[j]) {\n                  weightVal += parseInt(weight[key][i].weight)\n                }\n              }\n            }\n          } else {\n            //On the other hands, weight is the only one of the sub-menu weights.\n            for(let i = 0 ; i < weight[key].length ; i ++) {\n              if(weight[key][i].valueEs === value.answer) {\n                weightVal += parseInt(weight[key][i].weight)\n              }\n            }\n          }\n        }\n      }\n\n    //   if (value.show === true && value.answer === '') {\n    //     newErrors[key] = true\n    //     errorPresent = true\n    //   } else {\n    //     newErrors[key] = false\n    //     // console.log(key + \" : \" + value.answer)\n    //   }\n    })\n\n    //Add weight value to servey\n    newSurvey = { ...newSurvey, \"weight\": '' + weightVal}\n    console.log(newSurvey);\n\n    //Save to database new survey\n    await axios.post(BASIC_URL + \"/surveyData\", newSurvey)\n      .then(res => {\n\n          if( res.data.success === true ) {\n            Swal.fire({\n              icon: 'success',\n              title: 'Your request was transfered successfully.',\n            })\n            // window.location = \"/\";\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'There was occurred unknown errors.',\n            })\n\n          }\n\n      })\n\n    setErrors({ ...errors, newErrors })\n\n    // if (!errorPresent) {\n      // setFormState({ ...form, ...status, progress: 1 })\n    // }\n  }\n\n  const createMemberList = (value) => {\n    if(value === null || value === undefined || value === 0) {\n      return;\n    }\n    \n    let oneMember = {\n      relation: \"\",\n      age: \"\",\n      idNumber: \"\"\n    }\n    let houseMembersList = [];\n    for( let i = 0 ; i < value ; i ++ ) {\n      houseMembersList.push(oneMember);\n    }\n    setErrors({ ...errors, houseMembersList: false })\n    setStatus({\n      houseMembersList: { show: true, answer: houseMembersList }\n    })\n  }\n\n  const changeHouseMembersList = (idx, event) => {\n    \n    let { name, value } = event.target;\n    if( name === \"relation\" ) {\n      let afterValue = \"\";\n      switch(value) {\n        case \"selectMember\":\n          afterValue = \"\";\n          break;\n        case \"father\":\n          afterValue = t('houseMembersList.options.father');\n          break;\n        case \"mother\":\n          afterValue = t('houseMembersList.options.mother');\n          break;\n        case \"partner\":\n          afterValue = t('houseMembersList.options.partner');\n          break;\n        case \"child\":\n          afterValue = t('houseMembersList.options.child');\n          break;\n        case \"grandpa\":\n          afterValue = t('houseMembersList.options.grandpa');\n          break;\n        case \"other\":\n          afterValue = t('houseMembersList.options.other');\n          break;\n        default:\n          afterValue = \"\";\n          break;\n      }\n\n      value = afterValue;\n    }\n\n    let rows = [...status.houseMembersList.answer];\n    let oneItem = rows[idx];\n\n    rows[idx] = {\n        ...oneItem,\n        [name] : value\n    };\n\n    setStatus({\n      houseMembersList: { show: true, answer: rows }\n    })\n  }\n\n  const handleAsset = (event) => {\n    let newAssets = [];\n    if(event !== null) {\n        event.map((item, idx) => {\n        newAssets.push(item.value)\n      })\n    }\n    setErrors({ ...errors, asset: false })\n    setStatus({\n      asset: { show: true, answer: newAssets }\n    })\n  }\n\n  const handleSymptomsType = (event) => {\n    let newSymptomsType = [];\n    if(event !== null) {\n        event.map((item, idx) => {\n        newSymptomsType.push(item.value)\n      })\n    }\n    setErrors({ ...errors, symptomsType: false })\n    setStatus({\n      symptomsType: { show: true, answer: newSymptomsType }\n    })\n  }\n\n  const createDiseaseMembersList = (value) => {\n    if(value === null || value === undefined || value === 0) {\n      return;\n    }\n    \n    let oneMember = {\n      relation: \"\",\n      age: \"\",\n      disease: \"\"\n    }\n    let diseaseMembersList = [];\n    for( let i = 0 ; i < value ; i ++ ) {\n      diseaseMembersList.push(oneMember);\n    }\n    setErrors({ ...errors, diseaseMembersList: false })\n    setStatus({\n      diseaseMembersList: { show: true, answer: diseaseMembersList }\n    })\n  }\n\n  const changeDiseaseMemberList = (idx, event) => {\n    \n    let { name, value } = event.target;\n\n    if( name === \"relation\" || name === \"disease\" ) {\n      let afterValue = \"\";\n      switch(value) {\n        case \"selectMember\":\n          afterValue = \"\";\n          break;\n        case \"father\":\n          afterValue = t('diseaseMembersList.options.father');\n          break;\n        case \"mother\":\n          afterValue = t('diseaseMembersList.options.mother');\n          break;\n        case \"partner\":\n          afterValue = t('diseaseMembersList.options.partner');\n          break;\n        case \"child\":\n          afterValue = t('diseaseMembersList.options.child');\n          break;\n        case \"grandpa\":\n          afterValue = t('diseaseMembersList.options.grandpa');\n          break;\n        case \"other\":\n          afterValue = t('diseaseMembersList.options.other');\n          break;\n        case \"cancer\":\n          afterValue = t('diseaseMembersList.options.cancer');\n          break;\n        case \"diabetes\":\n          afterValue = t('diseaseMembersList.options.diabetes');\n          break;\n        case \"lupus\":\n          afterValue = t('diseaseMembersList.options.lupus');\n          break;\n        case \"otherCronicDisease\":\n          afterValue = t('diseaseMembersList.options.otherCronicDisease');\n          break;\n\n        default:\n          afterValue = \"\";\n          break;\n      }\n\n      value = afterValue;\n    }\n\n    let rows = [...status.diseaseMembersList.answer];\n    let oneItem = rows[idx];\n\n    rows[idx] = {\n        ...oneItem,\n        [name] : value\n    };\n\n    setStatus({\n      diseaseMembersList: { show: true, answer: rows }\n    })\n  }\n\n  const handleMainSourceIncome = ( value ) => {\n\n    nextQuestion(\"mainSourceIncome\")\n\n    if (value === null) \n      return;\n\n    let nexStatus = \"\";\n    switch(value) {\n      case t('mainSourceIncome.options.mainSourceIncome1'):\n      case t('mainSourceIncome.options.mainSourceIncome2'):\n        nexStatus = \"workCategory\";\n        break;\n\n      case t('mainSourceIncome.options.mainSourceIncome3'):\n      case t('mainSourceIncome.options.mainSourceIncome4'):\n        nexStatus = \"headingCompany\";\n        break;\n\n      case t('mainSourceIncome.options.mainSourceIncome5'):\n      case t('mainSourceIncome.options.mainSourceIncome6'):\n      case t('mainSourceIncome.options.mainSourceIncome7'):\n      case t('mainSourceIncome.options.mainSourceIncome9'):\n      case t('mainSourceIncome.options.mainSourceIncome10'):\n      case t('mainSourceIncome.options.mainSourceIncome11'):\n      case t('mainSourceIncome.options.mainSourceIncome12'):\n      case t('mainSourceIncome.options.mainSourceIncome13'):\n      case t('mainSourceIncome.options.mainSourceIncome14'):\n        nexStatus = \"whatCategoryDoes\";\n        break;\n\n      case t('mainSourceIncome.options.mainSourceIncome8'):\n        nexStatus = \"areYou\";\n        break;\n\n      case t('mainSourceIncome.options.mainSourceIncome15'):\n        nexStatus = \"unemployedPeriod\";\n        break;\n\n      case t('mainSourceIncome.options.mainSourceIncome16'):\n        nexStatus = \"receiveMoney\";\n        break;\n        \n      default:\n        nexStatus = \"workCategory\";\n        break;\n    }\n    handleQuestion(\"mainSourceIncome\", value, nexStatus);\n  }\n\n  const customStyles = {\n    control: (base, { selectProps }) => {\n      const boxShadow = selectProps.error\n        ? { boxShadow: '0 0 0 2px #bf215b' }\n        : {}\n      return {\n        ...base,\n        ...boxShadow,\n        transition: ' 0.25s linear',\n        transitionProperty: 'box-shadow'\n      }\n    }\n  }\n\n  const { t } = useTranslation('form')\n\n  return (\n    <FormBox>\n      <form onSubmit={handleSubmit}>\n\n        <>\n          <InputQuestion\n            title={t('firstName.question')}\n            onChange={(event) => {\n              handleQuestion('firstName', event.target.value, 'lastName')\n            }}\n            value={status.firstName.answer}\n            error={errors.firstName}\n          />\n        </>\n\n        {status['lastName'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <InputQuestion\n          title={t('lastName.question')}\n          onChange={( event ) => {\n            handleQuestion('lastName', event.target.value, 'idNumber')\n          }}\n          value={status.lastName.answer}\n          error={errors.lastName}\n        />\n        </>\n        )} \n\n        {status['idNumber'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <div className=\"row justify-content-center align-items-center\">\n            <div className=\"col-12 col-lg-6\">\n              <p className=\"lead m-lg-0\">{t('idNumber.question')}</p>\n            </div>\n            <div className=\"col-12 col-lg-5\">\n              <TextField \n                id=\"outlined-basic\" \n                style={{width: '100%'}}\n                variant=\"outlined\" \n                onChange={( event ) => {\n                  \n                  let {value} = event.target\n                  let numberRegExp = /[0-9\\b]+$/;\n                  if(value !== \"\" ) {\n                    if (!numberRegExp.test(value))\n                      return;\n                  }\n                  handleQuestion('idNumber', event.target.value, 'age')\n                }}\n                value={status.idNumber.answer}\n                error={errors.idNumber}\n                required\n                />\n            </div>\n          </div>\n        </>\n        )}\n\n        {status['gender'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('gender.question')}\n            options={[\n              { value: t('gender.options.male'), label: t('gender.options.male') },\n              { value: t('gender.options.female'), label: t('gender.options.female') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('gender', value, 'cellPhoneNumber')\n            }}\n            value={status.gender.answer}\n            error={errors.gender}\n          />\n        </>\n        )}\n\n        {status['cellPhoneNumber'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <div className=\"row justify-content-center align-items-center\">\n              <div className=\"col-12 col-lg-6\">\n                <p className=\"lead m-lg-0\">{t('cellPhoneNumber.question')}</p>\n              </div>\n              <div className=\"col-12 col-lg-5\">\n                <TextField \n                  id=\"outlined-basic\" \n                  style={{width: '100%'}}\n                  variant=\"outlined\" \n                  onChange={( event ) => {\n                    \n                    let {value} = event.target\n                    let numberRegExp = /[0-9\\b]+$/;\n                    if(value !== \"\" ) {\n                      if (!numberRegExp.test(value))\n                        return;\n                    }\n                    handleQuestion('cellPhoneNumber', event.target.value, 'age')\n                  }}\n                  value={status.cellPhoneNumber.answer}\n                  error={errors.cellPhoneNumber}\n                  required\n                  />\n              </div>\n            </div>\n          </>\n        )}\n\n        {status['age'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <Question\n              title={t('age.question')}\n              options={Array.from(Array(100)).map((_, i) => {\n                return {\n                  value: i,\n                  label: i\n                }\n              })}\n              onChange={({ value }) => {\n                handleQuestion('age', value, 'neighborhood')\n              }}\n              value={status.age.answer}\n              error={errors.age}\n            />\n          </>\n        )}\n\n        {status['neighborhood'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('neighborhood.question')}\n            options={[\n              { value: t('neighborhood.options.neighborhood1'), label: t('neighborhood.options.neighborhood1') },\n              { value: t('neighborhood.options.neighborhood2'), label: t('neighborhood.options.neighborhood2') },\n              { value: t('neighborhood.options.neighborhood3'), label: t('neighborhood.options.neighborhood3') },\n              { value: t('neighborhood.options.neighborhood4'), label: t('neighborhood.options.neighborhood4') },\n              { value: t('neighborhood.options.neighborhood5'), label: t('neighborhood.options.neighborhood5') },\n              { value: t('neighborhood.options.neighborhood6'), label: t('neighborhood.options.neighborhood6') },\n              { value: t('neighborhood.options.neighborhood7'), label: t('neighborhood.options.neighborhood7') },\n              { value: t('neighborhood.options.neighborhood8'), label: t('neighborhood.options.neighborhood8') },\n              { value: t('neighborhood.options.neighborhood9'), label: t('neighborhood.options.neighborhood9') },\n              { value: t('neighborhood.options.neighborhood10'), label: t('neighborhood.options.neighborhood10') },\n              { value: t('neighborhood.options.neighborhood11'), label: t('neighborhood.options.neighborhood11') },\n              { value: t('neighborhood.options.neighborhood12'), label: t('neighborhood.options.neighborhood12') },\n              { value: t('neighborhood.options.neighborhood13'), label: t('neighborhood.options.neighborhood13') },\n              { value: t('neighborhood.options.neighborhood14'), label: t('neighborhood.options.neighborhood14') },\n              { value: t('neighborhood.options.neighborhood15'), label: t('neighborhood.options.neighborhood15') },\n              { value: t('neighborhood.options.neighborhood16'), label: t('neighborhood.options.neighborhood16') },\n              { value: t('neighborhood.options.neighborhood17'), label: t('neighborhood.options.neighborhood17') },\n              { value: t('neighborhood.options.neighborhood18'), label: t('neighborhood.options.neighborhood18') },\n              { value: t('neighborhood.options.neighborhood19'), label: t('neighborhood.options.neighborhood19') },\n              { value: t('neighborhood.options.neighborhood20'), label: t('neighborhood.options.neighborhood20') },\n              { value: t('neighborhood.options.neighborhood21'), label: t('neighborhood.options.neighborhood21') },\n              { value: t('neighborhood.options.neighborhood22'), label: t('neighborhood.options.neighborhood22') },\n              { value: t('neighborhood.options.neighborhood23'), label: t('neighborhood.options.neighborhood23') },\n              { value: t('neighborhood.options.neighborhood24'), label: t('neighborhood.options.neighborhood24') },\n              { value: t('neighborhood.options.neighborhood25'), label: t('neighborhood.options.neighborhood25') },\n              { value: t('neighborhood.options.neighborhood26'), label: t('neighborhood.options.neighborhood26') },\n              { value: t('neighborhood.options.neighborhood27'), label: t('neighborhood.options.neighborhood27') },\n              { value: t('neighborhood.options.neighborhood28'), label: t('neighborhood.options.neighborhood28') },\n              { value: t('neighborhood.options.neighborhood29'), label: t('neighborhood.options.neighborhood29') },\n              { value: t('neighborhood.options.neighborhood30'), label: t('neighborhood.options.neighborhood30') },\n              { value: t('neighborhood.options.neighborhood31'), label: t('neighborhood.options.neighborhood31') },\n              { value: t('neighborhood.options.neighborhood32'), label: t('neighborhood.options.neighborhood32') },\n              { value: t('neighborhood.options.neighborhood33'), label: t('neighborhood.options.neighborhood33') },\n              { value: t('neighborhood.options.neighborhood34'), label: t('neighborhood.options.neighborhood34') },\n              { value: t('neighborhood.options.neighborhood35'), label: t('neighborhood.options.neighborhood35') },\n              { value: t('neighborhood.options.neighborhood36'), label: t('neighborhood.options.neighborhood36') },\n              { value: t('neighborhood.options.neighborhood37'), label: t('neighborhood.options.neighborhood37') },\n              { value: t('neighborhood.options.neighborhood38'), label: t('neighborhood.options.neighborhood38') },\n              { value: t('neighborhood.options.neighborhood39'), label: t('neighborhood.options.neighborhood39') },\n              { value: t('neighborhood.options.neighborhood40'), label: t('neighborhood.options.neighborhood40') },\n              { value: t('neighborhood.options.neighborhood41'), label: t('neighborhood.options.neighborhood41') },\n              { value: t('neighborhood.options.neighborhood42'), label: t('neighborhood.options.neighborhood42') },\n              { value: t('neighborhood.options.neighborhood43'), label: t('neighborhood.options.neighborhood43') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('neighborhood', value, 'address')\n            }}\n            value={status.neighborhood.answer}\n            error={errors.neighborhood}\n          />\n        </>\n        )}\n\n        {status['address'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <InputQuestion\n          title={t('address.question')}\n          onChange={(event) => {\n            handleQuestion('address', event.target.value, 'houseMembers')\n          }}\n          value={status.address.answer}\n          error={errors.address}\n        />\n        </>\n        )}\n\n        {status['houseMembers'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <Question\n              title={t('houseMembers.question')}\n              options={Array.from(Array(10)).map((_, i) => {\n                return {\n                  value: i,\n                  label: i\n                }\n              })}\n              onChange={({ value }) => {\n                handleQuestion('houseMembers', value, 'liveInHome')\n                createMemberList(value)\n              }}\n              value={status.houseMembers.answer}\n              error={errors.houseMembers}\n            />\n          </>\n        )} \n        \n        {status['liveInHome'].show && (\n          <>\n            {status.houseMembers.answer === 0 \n              ? null \n              :\n                <Table borderless responsive style={{marginTop: 70, marginBottom: 50}}>\n                  <thead>        \n                    <tr style={{backgroundColor: '#dcdcdc', color: 'grey', cursor: 'pointer' }}>\n                      <th style={{width: '5%', textAlign: 'center'}}>{t('houseMembersList.options.no')}</th>\n                      <th style={{width: '5%', textAlign: 'center'}}>{t('houseMembersList.options.relation')}</th>\n                      <th style={{width: '30%', textAlign: 'center'}}>{t('houseMembersList.options.age')}</th>\n                      <th style={{width: '30%', textAlign: 'center'}}>{t('houseMembersList.options.idNumber')}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {status.houseMembersList.answer.map((item, idx) => (\n                      <tr key={idx}>\n                        <td style={{width: '5%', textAlign: 'center'}}>\n                          {idx + 1}\n                        </td>\n                        <td style={{width: '30%', textAlign: 'center'}}>\n                          <NativeSelect\n                            onChange={(event) => {\n                              changeHouseMembersList(idx, event)\n                            }}\n                            name=\"relation\"\n                            className={{marginTop: 10}}\n                            inputProps={{ 'aria-label': 'relation' }}\n                            style={{marginLeft: 30, fontSize: 18}}\n                          >\n                            <option value=\"selectMember\"> {t('houseMembersList.options.selectRelation')} </option>\n                            <option value=\"father\">{t('houseMembersList.options.father')}</option>\n                            <option value=\"mother\">{t('houseMembersList.options.mother')}</option>\n                            <option value=\"partner\">{t('houseMembersList.options.partner')}</option>\n                            <option value=\"child\">{t('houseMembersList.options.child')}</option>\n                            <option value=\"grandpa\">{t('houseMembersList.options.grandpa')}</option>\n                            <option value=\"other\">{t('houseMembersList.options.other')}</option>\n                          </NativeSelect>           \n                        </td>\n                        <td style={{width: '30%', textAlign: 'center'}}>\n                          <TextField\n                            fullWidth\n                            helperText=\"\"\n                            label=\"\"\n                            name=\"age\"\n                            placeholder=\"Age\"\n                            onChange={(event) => {\n\n                              let {value} = event.target\n                              let numberRegExp = /[0-9\\b]+$/;\n                              if(value !== \"\") {\n                                if (!numberRegExp.test(value))\n                                  return;\n                              }\n                              changeHouseMembersList(idx, event)\n                            }}\n                            value={status.houseMembersList.answer[idx].age}\n                            required\n                          />                        \n\n                        </td>\n                        <td style={{width: '30%', textAlign: 'center'}}>\n                          <TextField\n                            fullWidth\n                            helperText=\"\"\n                            label=\"\"\n                            name=\"idNumber\"\n                            placeholder=\"ID Number\"\n                            onChange={(event) => {\n\n                              let {value} = event.target\n                              let numberRegExp = /[0-9\\b]+$/;\n                              if(value !== \"\") {\n                                if (!numberRegExp.test(value))\n                                  return;\n                              }\n                              changeHouseMembersList(idx, event)\n                            }}\n                            value={status.houseMembersList.answer[idx].idNumber}\n                          />                        \n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n            }\n          </>\n        )}\n\n        {status['liveInHome'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('liveInHome.question')}\n            options={[\n              { value: t('liveInHome.options.own'), label: t('liveInHome.options.own') },\n              { value: t('liveInHome.options.rental'), label: t('liveInHome.options.rental') },\n              { value: t('liveInHome.options.settlement'), label: t('liveInHome.options.settlement') },\n              { value: t('liveInHome.options.municipalland'), label: t('liveInHome.options.municipalland') },\n              { value: t('liveInHome.options.sas'), label: t('liveInHome.options.sas') },\n              { value: t('liveInHome.options.payingFeeLoan'), label: t('liveInHome.options.payingFeeLoan') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('liveInHome', value, 'houseMaterial')\n            }}\n            value={status.liveInHome.answer}\n            error={errors.liveInHome}\n          />\n        </>\n        )}\n\n        {status['houseMaterial'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('houseMaterial.question')}\n            options={[\n              { value: t('houseMaterial.options.houseMaterial1'), label: t('houseMaterial.options.houseMaterial1') },\n              { value: t('houseMaterial.options.houseMaterial2'), label: t('houseMaterial.options.houseMaterial2') },\n              { value: t('houseMaterial.options.houseMaterial3'), label: t('houseMaterial.options.houseMaterial3') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('houseMaterial', value, 'floor')\n            }}\n            value={status.houseMaterial.answer}\n            error={errors.houseMaterial}\n          />\n        </>\n        )}\n        \n        {status['floor'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('floor.question')}\n            options={[\n              { value: t('floor.options.floor1'), label: t('floor.options.floor1') },\n              { value: t('floor.options.floor2'), label: t('floor.options.floor2') },\n              { value: t('floor.options.floor3'), label: t('floor.options.floor3') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('floor', value, 'roof')\n            }}\n            value={status.floor.answer}\n            error={errors.floor}\n          />\n        </>\n        )}\n\n        {status['roof'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('roof.question')}\n            options={[\n              { value: t('roof.options.roof1'), label: t('roof.options.roof1') },\n              { value: t('roof.options.roof2'), label: t('roof.options.roof2') },\n              { value: t('roof.options.roof3'), label: t('roof.options.roof3') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('roof', value, 'bathroom')\n            }}\n            value={status.roof.answer}\n            error={errors.roof}\n          />\n        </>\n        )}\n        \n        {status['bathroom'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('bathroom.question')}\n            options={[\n              { value: t('bathroom.options.bathroom1'), label: t('bathroom.options.bathroom1') },\n              { value: t('bathroom.options.bathroom2'), label: t('bathroom.options.bathroom2') },\n              { value: t('bathroom.options.bathroom3'), label: t('bathroom.options.bathroom3') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('bathroom', value, 'water')\n            }}\n            value={status.bathroom.answer}\n            error={errors.bathroom}\n          />\n        </>\n        )}\n        \n        {status['water'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('water.question')}\n            options={[\n              { value: t('water.options.water1'), label: t('water.options.water1') },\n              { value: t('water.options.water2'), label: t('water.options.water2') },\n              { value: t('water.options.water3'), label: t('water.options.water3') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('water', value, 'cooking')\n            }}\n            value={status.water.answer}\n            error={errors.water}\n          />\n        </>\n        )}\n        \n        {status['cooking'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('cooking.question')}\n            options={[\n              { value: t('cooking.options.cooking1'), label: t('cooking.options.cooking1') },\n              { value: t('cooking.options.cooking2'), label: t('cooking.options.cooking2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('cooking', value, 'guarani')\n            }}\n            value={status.cooking.answer}\n            error={errors.cooking}\n          />\n        </>\n        )}\n           \n        {status['guarani'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <div className=\"row justify-content-center align-items-center\">\n            <div className=\"col-12 col-lg-6\">\n              <p className=\"lead m-lg-0\">{t('asset.question')}</p>\n            </div>\n            <div className=\"col-12 col-lg-5\">\n              <Select\n                options={[\n                  { value: t('asset.options.asset1'), label: t('asset.options.asset1') },\n                  { value: t('asset.options.asset2'), label: t('asset.options.asset2') },\n                  { value: t('asset.options.asset3'), label: t('asset.options.asset3') },\n                  { value: t('asset.options.asset4'), label: t('asset.options.asset4') },\n                  { value: t('asset.options.asset5'), label: t('asset.options.asset5') },\n                  { value: t('asset.options.asset6'), label: t('asset.options.asset6') },\n                  { value: t('asset.options.asset7'), label: t('asset.options.asset7') },\n                  { value: t('asset.options.asset8'), label: t('asset.options.asset8') },\n                  { value: t('asset.options.asset9'), label: t('asset.options.asset9') },\n                  { value: t('asset.options.asset10'), label: t('asset.options.asset10') }\n                ]}\n                isMulti\n                isSearchable={false}\n                onChange={(event) => handleAsset(event)}\n                // value={selectedValue}\n                styles={customStyles}\n                error={errors.asset}\n                placeholder={t('placeholder')}\n              />\n              {errors.asset && (\n                <div className=\"invalid-feedback\" style={{ display: 'block' }}>\n                  {t('pleaseChoose')}\n                </div>\n              )}\n            </div>\n          </div>\n        </>\n        )}     \n\n        {status['guarani'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <Question\n              title={t('guarani.question')}\n              options={Array.from(Array(10)).map((_, i) => {\n                return {\n                  value: i,\n                  label: i\n                }\n              })}\n              onChange={({ value }) => {\n                handleQuestion('guarani', value, 'suspectedCase')\n              }}\n              value={status.guarani.answer}\n              error={errors.guarani}\n            />\n          </>\n        )}\n\n        {status['suspectedCase'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('symptomsType.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <Select\n              options={[\n                { value: t('symptomsType.options.symptomsType1'), label: t('symptomsType.options.symptomsType1') },\n                { value: t('symptomsType.options.symptomsType2'), label: t('symptomsType.options.symptomsType2') },\n                { value: t('symptomsType.options.symptomsType3'), label: t('symptomsType.options.symptomsType3') },\n                { value: t('symptomsType.options.symptomsType4'), label: t('symptomsType.options.symptomsType4') },\n                { value: t('symptomsType.options.symptomsType5'), label: t('symptomsType.options.symptomsType5') },\n                { value: t('symptomsType.options.symptomsType6'), label: t('symptomsType.options.symptomsType6') },\n                { value: t('symptomsType.options.symptomsType7'), label: t('symptomsType.options.symptomsType7') },\n              ]}\n              isMulti\n              isSearchable={false}\n              onChange={(event) => handleSymptomsType(event)}\n              // value={selectedValue}\n              styles={customStyles}\n              error={errors.symptomsType}\n              placeholder={t('placeholder')}\n            />\n            {errors.symptomsType && (\n              <div className=\"invalid-feedback\" style={{ display: 'block' }}>\n                {t('pleaseChoose')}\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n      )}\n              \n        {status['suspectedCase'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('suspectedCase.question')}\n            options={[\n              { value: t('suspectedCase.options.suspectedCase1'), label: t('suspectedCase.options.suspectedCase1') },\n              { value: t('suspectedCase.options.suspectedCase2'), label: t('suspectedCase.options.suspectedCase2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('suspectedCase', value, 'suffering')\n            }}\n            value={status.suspectedCase.answer}\n            error={errors.suspectedCase}\n          />\n        </>\n        )}\n                      \n        {status['suffering'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('suffering.question')}\n            options={[\n              { value: t('suffering.options.suffering1'), label: t('suffering.options.suffering1') },\n              { value: t('suffering.options.suffering2'), label: t('suffering.options.suffering2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('suffering', value, 'diseaseMembers')\n            }}\n            value={status.suffering.answer}\n            error={errors.suffering}\n          />\n        </>\n        )}\n\n        {status['diseaseMembers'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <Question\n              title={t('diseaseMembers.question')}\n              options={Array.from(Array(10)).map((_, i) => {\n                return {\n                  value: i,\n                  label: i\n                }\n              })}\n              onChange={({ value }) => {\n                handleQuestion('diseaseMembers', value, 'regularVisitors')\n                createDiseaseMembersList(value)\n              }}\n              value={status.diseaseMembers.answer}\n              error={errors.diseaseMembers}\n            />\n          </>\n        )}\n        \n        {status['regularVisitors'].show && (\n          <>\n            {status.diseaseMembers.answer === 0 \n              ? null \n              : \n                <Table borderless responsive style={{marginTop: 70, marginBottom: 50}}>\n                  <thead>        \n                    <tr style={{backgroundColor: '#dcdcdc', color: 'grey', cursor: 'pointer' }}>\n                      <th style={{width: '5%', textAlign: 'center'}}>{t('diseaseMembersList.options.no')}</th>\n                      <th style={{width: '5%', textAlign: 'center'}}>{t('diseaseMembersList.options.relation')}</th>\n                      <th style={{width: '30%', textAlign: 'center'}}>{t('diseaseMembersList.options.age')}</th>\n                      <th style={{width: '30%', textAlign: 'center'}}>{t('diseaseMembersList.options.disease')}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {status.diseaseMembersList.answer.map((item, idx) => (\n                      <tr key={idx}>\n                        <td style={{width: '5%', textAlign: 'center'}}>\n                          {idx + 1}\n                        </td>\n                        <td style={{width: '30%', textAlign: 'center'}}>\n                          <NativeSelect\n                            onChange={(event) => {\n                              changeDiseaseMemberList(idx, event)\n                            }}\n                            name=\"relation\"\n                            className={{marginTop: 10}}\n                            inputProps={{ 'aria-label': 'relation' }}\n                            style={{marginLeft: 30, fontSize: 18}}\n                          >\n                            <option value=\"selectMember\"> {t('diseaseMembersList.options.selectRelation')} </option>\n                            <option value=\"father\">{t('diseaseMembersList.options.father')}</option>\n                            <option value=\"mother\">{t('diseaseMembersList.options.mother')}</option>\n                            <option value=\"partner\">{t('diseaseMembersList.options.partner')}</option>\n                            <option value=\"child\">{t('diseaseMembersList.options.child')}</option>\n                            <option value=\"grandpa\">{t('diseaseMembersList.options.grandpa')}</option>\n                            <option value=\"other\">{t('diseaseMembersList.options.other')}</option>\n                          </NativeSelect>           \n                        </td>\n                        <td style={{width: '30%', textAlign: 'center'}}>\n                          <TextField\n                            fullWidth\n                            helperText=\"\"\n                            label=\"\"\n                            name=\"age\"\n                            placeholder=\"Age\"\n                            onChange={(event) => {\n\n                              let {value} = event.target\n                              let numberRegExp = /[0-9\\b]+$/;\n                              if(value !== \"\") {\n                                if (!numberRegExp.test(value))\n                                  return;\n                              }\n                              changeDiseaseMemberList(idx, event)\n                            }}\n                            value={status.diseaseMembersList.answer[idx].age}\n                            required\n                          />                        \n                        </td>\n                        <td style={{width: '30%', textAlign: 'center'}}>\n                          <NativeSelect\n                            onChange={(event) => {\n                              changeDiseaseMemberList(idx, event)\n                            }}\n                            name=\"disease\"\n                            className={{marginTop: 10}}\n                            inputProps={{ 'aria-label': 'disease' }}\n                            style={{marginLeft: 30, fontSize: 18}}\n                          >\n                            <option value=\"selectDisease\"> {t('diseaseMembersList.options.selectDisease')} </option>\n                            <option value=\"cancer\">{t('diseaseMembersList.options.cancer')}</option>\n                            <option value=\"diabetes\">{t('diseaseMembersList.options.diabetes')}</option>\n                            <option value=\"lupus\">{t('diseaseMembersList.options.lupus')}</option>\n                            <option value=\"otherCronicDisease\">{t('diseaseMembersList.options.otherCronicDisease')}</option>\n                          </NativeSelect>                       \n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n            }\n          </>\n        )}\n\n        {status['regularVisitors'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <Question\n              title={t('regularVisitors.question')}\n              options={Array.from(Array(10)).map((_, i) => {\n                return {\n                  value: i,\n                  label: i\n                }\n              })}\n              onChange={({ value }) => {\n                handleQuestion('regularVisitors', value, 'mainSourceIncome')\n              }}\n              value={status.regularVisitors.answer}\n              error={errors.regularVisitors}\n            />\n          </>\n        )}\n\n\n        {\n        // Indicated Branch \n        }\n        {status['mainSourceIncome'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('mainSourceIncome.question')}\n            options={[\n              { value: t('mainSourceIncome.options.mainSourceIncome1'), label: t('mainSourceIncome.options.mainSourceIncome1') },\n              { value: t('mainSourceIncome.options.mainSourceIncome2'), label: t('mainSourceIncome.options.mainSourceIncome2') },\n              { value: t('mainSourceIncome.options.mainSourceIncome3'), label: t('mainSourceIncome.options.mainSourceIncome3') },\n              { value: t('mainSourceIncome.options.mainSourceIncome4'), label: t('mainSourceIncome.options.mainSourceIncome4') },\n              { value: t('mainSourceIncome.options.mainSourceIncome5'), label: t('mainSourceIncome.options.mainSourceIncome5') },\n              { value: t('mainSourceIncome.options.mainSourceIncome6'), label: t('mainSourceIncome.options.mainSourceIncome6') },\n              { value: t('mainSourceIncome.options.mainSourceIncome7'), label: t('mainSourceIncome.options.mainSourceIncome7') },\n              { value: t('mainSourceIncome.options.mainSourceIncome8'), label: t('mainSourceIncome.options.mainSourceIncome8') },\n              { value: t('mainSourceIncome.options.mainSourceIncome9'), label: t('mainSourceIncome.options.mainSourceIncome9') },\n              { value: t('mainSourceIncome.options.mainSourceIncome10'), label: t('mainSourceIncome.options.mainSourceIncome10') },\n              { value: t('mainSourceIncome.options.mainSourceIncome11'), label: t('mainSourceIncome.options.mainSourceIncome11') },\n              { value: t('mainSourceIncome.options.mainSourceIncome12'), label: t('mainSourceIncome.options.mainSourceIncome12') },\n              { value: t('mainSourceIncome.options.mainSourceIncome13'), label: t('mainSourceIncome.options.mainSourceIncome13') },\n              { value: t('mainSourceIncome.options.mainSourceIncome14'), label: t('mainSourceIncome.options.mainSourceIncome14') },\n              { value: t('mainSourceIncome.options.mainSourceIncome15'), label: t('mainSourceIncome.options.mainSourceIncome15') },\n              { value: t('mainSourceIncome.options.mainSourceIncome16'), label: t('mainSourceIncome.options.mainSourceIncome16') },\n            ]}\n            onChange={({ value }) => {\n              handleMainSourceIncome(value)\n            }}\n            value={status.mainSourceIncome.answer}\n            error={errors.mainSourceIncome}\n          />\n        </>\n        )}\n\n        {\n          // 4.1 In what category you work? \n        }\n        {status['workCategory'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('workCategory.question')}\n            options={[\n              { value: t('workCategory.options.workCategory1'), label: t('workCategory.options.workCategory1') },\n              { value: t('workCategory.options.workCategory2'), label: t('workCategory.options.workCategory2') },\n              { value: t('workCategory.options.workCategory3'), label: t('workCategory.options.workCategory3') },\n              { value: t('workCategory.options.workCategory4'), label: t('workCategory.options.workCategory4') },\n              { value: t('workCategory.options.workCategory5'), label: t('workCategory.options.workCategory5') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('workCategory', value, 'employeesNumber')\n            }}\n            value={status.workCategory.answer}\n            error={errors.workCategory}\n          />\n        </>\n        )}\n\n        {status['workCategory'].show && status['employeesNumber'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('employeesNumber.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <TextField \n              id=\"outlined-basic\" \n              style={{width: '100%'}}\n              variant=\"outlined\" \n              onChange={( event ) => {\n                \n                let {value} = event.target\n                let numberRegExp = /[0-9\\b]+$/;\n                if(value !== \"\" ) {\n                  if (!numberRegExp.test(value))\n                    return;\n                }\n                handleQuestion('employeesNumber', event.target.value, 'allIPS')\n              }}\n              value={status.employeesNumber.answer}\n              error={errors.employeesNumber}\n              required\n              />\n          </div>\n        </div>\n      </>\n\n        )}\n\n        {status['workCategory'].show && status['allIPS'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('allIPS.question')}\n            options={[\n              { value: t('allIPS.options.allIPS1'), label: t('allIPS.options.allIPS1') },\n              { value: t('allIPS.options.allIPS2'), label: t('allIPS.options.allIPS2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('allIPS', value, 'layOffEmployees')\n            }}\n            value={status.allIPS.answer}\n            error={errors.allIPS}\n          />\n        </>\n        )}\n\n        {status['workCategory'].show && status['layOffEmployees'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('layOffEmployees.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <TextField \n              id=\"outlined-basic\" \n              style={{width: '100%'}}\n              variant=\"outlined\" \n              onChange={( event ) => {\n                \n                let {value} = event.target\n                let numberRegExp = /[0-9\\b]+$/;\n                if(value !== \"\" ) {\n                  if (!numberRegExp.test(value))\n                    return;\n                }\n                handleQuestion('layOffEmployees', event.target.value, 'businessSituation')\n              }}\n              value={status.layOffEmployees.answer}\n              error={errors.layOffEmployees}\n              required\n              />\n          </div>\n        </div>\n        </>\n        )}\n\n        {status['workCategory'].show && status['businessSituation'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('businessSituation.question')}\n            options={[\n              { value: t('businessSituation.options.businessSituation1'), label: t('businessSituation.options.businessSituation1') },\n              { value: t('businessSituation.options.businessSituation2'), label: t('businessSituation.options.businessSituation2') },\n              { value: t('businessSituation.options.businessSituation3'), label: t('businessSituation.options.businessSituation3') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('businessSituation', value, 'businessStrategy')\n            }}\n            value={status.businessSituation.answer}\n            error={errors.businessSituation}\n          />\n        </>\n        )}\n        \n        {status['workCategory'].show && status['businessStrategy'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('businessStrategy.question')}\n            options={[\n              { value: t('businessStrategy.options.businessStrategy1'), label: t('businessStrategy.options.businessStrategy1') },\n              { value: t('businessStrategy.options.businessStrategy2'), label: t('businessStrategy.options.businessStrategy2') },\n              { value: t('businessStrategy.options.businessStrategy3'), label: t('businessStrategy.options.businessStrategy3') },\n              { value: t('businessStrategy.options.businessStrategy4'), label: t('businessStrategy.options.businessStrategy4') },\n              { value: t('businessStrategy.options.businessStrategy5'), label: t('businessStrategy.options.businessStrategy5') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('businessStrategy', value, 'amountMarchMoney')\n            }}\n            value={status.businessStrategy.answer}\n            error={errors.businessStrategy}\n          />\n        </>\n        )}\n\n        {status['workCategory'].show && status['amountMarchMoney'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('amountMarchMoney.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <TextField \n              id=\"outlined-basic\" \n              style={{width: '100%'}}\n              variant=\"outlined\" \n              onChange={( event ) => {\n                \n                let {value} = event.target\n                let numberRegExp = /[0-9\\b]+$/;\n                if(value !== \"\" ) {\n                  if (!numberRegExp.test(value))\n                    return;\n                }\n                handleQuestion('amountMarchMoney', event.target.value, 'amountAprilMoney')\n              }}\n              value={status.amountMarchMoney.answer}\n              error={errors.amountMarchMoney}\n              required\n              />\n          </div>\n        </div>\n        </>\n        )}\n        \n        {status['workCategory'].show && status['amountAprilMoney'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('amountAprilMoney.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <TextField \n              id=\"outlined-basic\" \n              style={{width: '100%'}}\n              variant=\"outlined\" \n              onChange={( event ) => {\n                \n                let {value} = event.target\n                let numberRegExp = /[0-9\\b]+$/;\n                if(value !== \"\" ) {\n                  if (!numberRegExp.test(value))\n                    return;\n                }\n                handleQuestion('amountAprilMoney', event.target.value, 'commentMayerWorkCategory')\n              }}\n              value={status.amountAprilMoney.answer}\n              error={errors.amountAprilMoney}\n              required\n              />\n          </div>\n        </div>\n        </>\n        )}\n\n        {status['workCategory'].show && status['commentMayerWorkCategory'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <MultiInput\n          title={t('commentMayer.question')}\n          onChange={(event) => {\n            handleQuestion('commentMayerWorkCategory', event.target.value, 'end')\n          }}\n          value={status.commentMayerWorkCategory.answer}\n          error={errors.commentMayerWorkCategory}\n        />\n        </>\n        )}        \n\n        {\n        // 5.1 What it is operating heading the company? \n        }\n        {status['headingCompany'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('headingCompany.question')}\n            options={[\n              { value: t('headingCompany.options.headingCompany1'), label: t('headingCompany.options.headingCompany1') },\n              { value: t('headingCompany.options.headingCompany2'), label: t('headingCompany.options.headingCompany2') },\n              { value: t('headingCompany.options.headingCompany3'), label: t('headingCompany.options.headingCompany3') },\n              { value: t('headingCompany.options.headingCompany4'), label: t('headingCompany.options.headingCompany4') },\n              { value: t('headingCompany.options.headingCompany5'), label: t('headingCompany.options.headingCompany5') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('headingCompany', value, 'role')\n            }}\n            value={status.headingCompany.answer}\n            error={errors.headingCompany}\n          />\n        </>\n        )}\n                \n        {status['headingCompany'].show && status['role'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('role.question')}\n            options={[\n              { value: t('role.options.role1'), label: t('role.options.role1') },\n              { value: t('role.options.role2'), label: t('role.options.role2') },\n              { value: t('role.options.role3'), label: t('role.options.role3') },\n              { value: t('role.options.role4'), label: t('role.options.role4') },\n              { value: t('role.options.role5'), label: t('role.options.role5') },\n              { value: t('role.options.role6'), label: t('role.options.role6') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('role', value, 'expectIPSHeadingCompany')\n            }}\n            value={status.role.answer}\n            error={errors.role}\n          />\n        </>\n        )}\n\n        {status['headingCompany'].show && status['expectIPSHeadingCompany'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('expectIPS.question')}\n            options={[\n              { value: t('expectIPSHeadingCompany.options.expectIPSHeadingCompany1'), label: t('expectIPSHeadingCompany.options.expectIPSHeadingCompany1') },\n              { value: t('expectIPSHeadingCompany.options.expectIPSHeadingCompany2'), label: t('expectIPSHeadingCompany.options.expectIPSHeadingCompany2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('expectIPSHeadingCompany', value, 'loseJobHeadingCompany')\n            }}\n            value={status.expectIPSHeadingCompany.answer}\n            error={errors.expectIPSHeadingCompany}\n          />\n        </>\n        )}\n        \n        {status['headingCompany'].show && status['loseJobHeadingCompany'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('loseJob.question')}\n            options={[\n              { value: t('loseJobHeadingCompany.options.loseJobHeadingCompany1'), label: t('loseJobHeadingCompany.options.loseJobHeadingCompany1') },\n              { value: t('loseJobHeadingCompany.options.loseJobHeadingCompany2'), label: t('loseJobHeadingCompany.options.loseJobHeadingCompany2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('loseJobHeadingCompany', value, 'guaraniEnterHeadingCompany')\n            }}\n            value={status.loseJobHeadingCompany.answer}\n            error={errors.loseJobHeadingCompany}\n          />\n        </>\n        )}\n        \n        {status['headingCompany'].show && status['guaraniEnterHeadingCompany'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <Question\n              title={t('guaraniEnter.question')}\n              options={Array.from(Array(10)).map((_, i) => {\n                return {\n                  value: i,\n                  label: i\n                }\n              })}\n              onChange={({ value }) => {\n                handleQuestion('guaraniEnterHeadingCompany', value, 'workplaceHeadingCompany')\n              }}\n              value={status.guaraniEnterHeadingCompany.answer}\n              error={errors.guaraniEnterHeadingCompany}\n            />\n          </>\n        )}\n                \n        {status['headingCompany'].show && status['workplaceHeadingCompany'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('workplace.question')}\n            options={[\n              { value: t('workplaceHeadingCompany.options.workplaceHeadingCompany1'), label: t('workplaceHeadingCompany.options.workplaceHeadingCompany1') },\n              { value: t('workplaceHeadingCompany.options.workplaceHeadingCompany2'), label: t('workplaceHeadingCompany.options.workplaceHeadingCompany2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('workplaceHeadingCompany', value, 'shareWorkplaceHeadingCompany')\n            }}\n            value={status.workplaceHeadingCompany.answer}\n            error={errors.workplaceHeadingCompany}\n          />\n        </>\n        )}\n                \n        {status['headingCompany'].show && status['shareWorkplaceHeadingCompany'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('shareWorkplace.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <TextField \n              id=\"outlined-basic\" \n              style={{width: '100%'}}\n              variant=\"outlined\" \n              onChange={( event ) => {\n                \n                let {value} = event.target\n                let numberRegExp = /[0-9\\b]+$/;\n                if(value !== \"\" ) {\n                  if (!numberRegExp.test(value))\n                    return;\n                }\n                handleQuestion('shareWorkplaceHeadingCompany', event.target.value, 'commentMayerHeadingCompany')\n              }}\n              value={status.shareWorkplaceHeadingCompany.answer}\n              error={errors.shareWorkplaceHeadingCompany}\n              required\n              />\n          </div>\n        </div>\n        </>\n        )}\n\n        {status['headingCompany'].show && status['commentMayerHeadingCompany'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <MultiInput\n          title={t('commentMayer.question')}\n          onChange={(event) => {\n            handleQuestion('commentMayerHeadingCompany', event.target.value, 'end')\n          }}\n          value={status.commentMayerHeadingCompany.answer}\n          error={errors.commentMayerHeadingCompany}\n        />\n        </>\n        )} \n\n        {\n        // 6.1 What category does its work? \n        }\n        {status['whatCategoryDoes'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('whatCategoryDoes.question')}\n            options={[\n              { value: t('whatCategoryDoes.options.whatCategoryDoes1'), label: t('whatCategoryDoes.options.whatCategoryDoes1') },\n              { value: t('whatCategoryDoes.options.whatCategoryDoes2'), label: t('whatCategoryDoes.options.whatCategoryDoes2') },\n              { value: t('whatCategoryDoes.options.whatCategoryDoes3'), label: t('whatCategoryDoes.options.whatCategoryDoes3') },\n              { value: t('whatCategoryDoes.options.whatCategoryDoes4'), label: t('whatCategoryDoes.options.whatCategoryDoes4') },\n              { value: t('whatCategoryDoes.options.whatCategoryDoes5'), label: t('whatCategoryDoes.options.whatCategoryDoes5') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('whatCategoryDoes', value, 'expectIPSWhatCategoryDoes')\n            }}\n            value={status.whatCategoryDoes.answer}\n            error={errors.whatCategoryDoes}\n          />\n        </>\n        )}\n\n        {status['whatCategoryDoes'].show && status['expectIPSWhatCategoryDoes'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('expectIPS.question')}\n            options={[\n              { value: t('expectIPSWhatCategoryDoes.options.expectIPSWhatCategoryDoes1'), label: t('expectIPSWhatCategoryDoes.options.expectIPSWhatCategoryDoes1') },\n              { value: t('expectIPSWhatCategoryDoes.options.expectIPSWhatCategoryDoes2'), label: t('expectIPSWhatCategoryDoes.options.expectIPSWhatCategoryDoes2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('expectIPSWhatCategoryDoes', value, 'loseJobWhatCategoryDoes')\n            }}\n            value={status.expectIPSWhatCategoryDoes.answer}\n            error={errors.expectIPSWhatCategoryDoes}\n          />\n        </>\n        )}\n        \n        {status['whatCategoryDoes'].show && status['loseJobWhatCategoryDoes'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('loseJob.question')}\n            options={[\n              { value: t('loseJobWhatCategoryDoes.options.loseJobWhatCategoryDoes1'), label: t('loseJobWhatCategoryDoes.options.loseJobWhatCategoryDoes1') },\n              { value: t('loseJobWhatCategoryDoes.options.loseJobWhatCategoryDoes2'), label: t('loseJobWhatCategoryDoes.options.loseJobWhatCategoryDoes2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('loseJobWhatCategoryDoes', value, 'guaraniEnterWhatCategoryDoes')\n            }}\n            value={status.loseJobWhatCategoryDoes.answer}\n            error={errors.loseJobWhatCategoryDoes}\n          />\n        </>\n        )}\n        \n        {status['whatCategoryDoes'].show && status['guaraniEnterWhatCategoryDoes'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <Question\n              title={t('guaraniEnter.question')}\n              options={Array.from(Array(10)).map((_, i) => {\n                return {\n                  value: i,\n                  label: i\n                }\n              })}\n              onChange={({ value }) => {\n                handleQuestion('guaraniEnterWhatCategoryDoes', value, 'workplaceWhatCategoryDoes')\n              }}\n              value={status.guaraniEnterWhatCategoryDoes.answer}\n              error={errors.guaraniEnterWhatCategoryDoes}\n            />\n          </>\n        )}\n                \n        {status['whatCategoryDoes'].show && status['workplaceWhatCategoryDoes'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('workplace.question')}\n            options={[\n              { value: t('workplaceWhatCategoryDoes.options.workplaceWhatCategoryDoes1'), label: t('workplaceWhatCategoryDoes.options.workplaceWhatCategoryDoes1') },\n              { value: t('workplaceWhatCategoryDoes.options.workplaceWhatCategoryDoes2'), label: t('workplaceWhatCategoryDoes.options.workplaceWhatCategoryDoes2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('workplaceWhatCategoryDoes', value, 'shareWorkplaceWhatCategoryDoes')\n            }}\n            value={status.workplaceWhatCategoryDoes.answer}\n            error={errors.workplaceWhatCategoryDoes}\n          />\n        </>\n        )}\n                \n        {status['whatCategoryDoes'].show && status['shareWorkplaceWhatCategoryDoes'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('shareWorkplace.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <TextField \n              id=\"outlined-basic\" \n              style={{width: '100%'}}\n              variant=\"outlined\" \n              onChange={( event ) => {\n                \n                let {value} = event.target\n                let numberRegExp = /[0-9\\b]+$/;\n                if(value !== \"\" ) {\n                  if (!numberRegExp.test(value))\n                    return;\n                }\n                handleQuestion('shareWorkplaceWhatCategoryDoes', event.target.value, 'commentMayerWhatCategoryDoes')\n              }}\n              value={status.shareWorkplaceWhatCategoryDoes.answer}\n              error={errors.shareWorkplaceWhatCategoryDoes}\n              required\n              />\n          </div>\n        </div>\n        </>\n        )}\n\n        {status['whatCategoryDoes'].show && status['commentMayerWhatCategoryDoes'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <MultiInput\n          title={t('commentMayer.question')}\n          onChange={(event) => {\n            handleQuestion('commentMayerWhatCategoryDoes', event.target.value, 'end')\n          }}\n          value={status.commentMayerWhatCategoryDoes.answer}\n          error={errors.commentMayerWhatCategoryDoes}\n        />\n        </>\n        )} \n\n        {\n        // 7.1 Are you: \n        }\n        {status['areYou'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('areYou.question')}\n            options={[\n              { value: t('areYou.options.areYou1'), label: t('areYou.options.areYou1') },\n              { value: t('areYou.options.areYou2'), label: t('areYou.options.areYou2') },\n              { value: t('areYou.options.areYou3'), label: t('areYou.options.areYou3') },\n              { value: t('areYou.options.areYou4'), label: t('areYou.options.areYou4') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('areYou', value, 'medicalCenterServing')\n            }}\n            value={status.areYou.answer}\n            error={errors.areYou}\n          />\n        </>\n        )}\n\n        {status['areYou'].show && status['medicalCenterServing'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('medicalCenterServing.question')}\n            options={[\n              { value: t('medicalCenterServing.options.medicalCenterServing1'), label: t('medicalCenterServing.options.medicalCenterServing1') },\n              { value: t('medicalCenterServing.options.medicalCenterServing2'), label: t('medicalCenterServing.options.medicalCenterServing2') },\n              { value: t('medicalCenterServing.options.medicalCenterServing3'), label: t('medicalCenterServing.options.medicalCenterServing3') },\n              { value: t('medicalCenterServing.options.medicalCenterServing4'), label: t('medicalCenterServing.options.medicalCenterServing4') },\n              { value: t('medicalCenterServing.options.medicalCenterServing5'), label: t('medicalCenterServing.options.medicalCenterServing5') },\n              { value: t('medicalCenterServing.options.medicalCenterServing6'), label: t('medicalCenterServing.options.medicalCenterServing6') },\n              { value: t('medicalCenterServing.options.medicalCenterServing7'), label: t('medicalCenterServing.options.medicalCenterServing7') },\n              { value: t('medicalCenterServing.options.medicalCenterServing8'), label: t('medicalCenterServing.options.medicalCenterServing8') },\n              { value: t('medicalCenterServing.options.medicalCenterServing9'), label: t('medicalCenterServing.options.medicalCenterServing9') },\n              { value: t('medicalCenterServing.options.medicalCenterServing10'), label: t('medicalCenterServing.options.medicalCenterServing10') },\n              { value: t('medicalCenterServing.options.medicalCenterServing11'), label: t('medicalCenterServing.options.medicalCenterServing11') },\n              { value: t('medicalCenterServing.options.medicalCenterServing12'), label: t('medicalCenterServing.options.medicalCenterServing12') },\n              { value: t('medicalCenterServing.options.medicalCenterServing13'), label: t('medicalCenterServing.options.medicalCenterServing13') },\n              { value: t('medicalCenterServing.options.medicalCenterServing14'), label: t('medicalCenterServing.options.medicalCenterServing14') },\n              { value: t('medicalCenterServing.options.medicalCenterServing15'), label: t('medicalCenterServing.options.medicalCenterServing15') },\n              { value: t('medicalCenterServing.options.medicalCenterServing16'), label: t('medicalCenterServing.options.medicalCenterServing16') },\n              { value: t('medicalCenterServing.options.medicalCenterServing17'), label: t('medicalCenterServing.options.medicalCenterServing17') },\n              { value: t('medicalCenterServing.options.medicalCenterServing18'), label: t('medicalCenterServing.options.medicalCenterServing18') },\n              { value: t('medicalCenterServing.options.medicalCenterServing19'), label: t('medicalCenterServing.options.medicalCenterServing19') },\n              { value: t('medicalCenterServing.options.medicalCenterServing20'), label: t('medicalCenterServing.options.medicalCenterServing20') },\n              { value: t('medicalCenterServing.options.medicalCenterServing21'), label: t('medicalCenterServing.options.medicalCenterServing21') },\n              { value: t('medicalCenterServing.options.medicalCenterServing22'), label: t('medicalCenterServing.options.medicalCenterServing22') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('medicalCenterServing', value, 'instruments')\n            }}\n            value={status.medicalCenterServing.answer}\n            error={errors.medicalCenterServing}\n          />\n        </>\n        )}\n                \n        {status['areYou'].show && status['instruments'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('instruments.question')}\n            options={[\n              { value: t('instruments.options.instruments1'), label: t('instruments.options.instruments1') },\n              { value: t('instruments.options.instruments2'), label: t('instruments.options.instruments2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('instruments', value, 'suspectedCaseMedicalCenter')\n            }}\n            value={status.instruments.answer}\n            error={errors.instruments}\n          />\n        </>\n        )}\n                        \n        {status['areYou'].show && status['suspectedCaseMedicalCenter'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('suspectedCaseMedicalCenter.question')}\n            options={[\n              { value: t('suspectedCaseMedicalCenter.options.suspectedCaseMedicalCenter1'), label: t('suspectedCaseMedicalCenter.options.suspectedCaseMedicalCenter1') },\n              { value: t('suspectedCaseMedicalCenter.options.suspectedCaseMedicalCenter2'), label: t('suspectedCaseMedicalCenter.options.suspectedCaseMedicalCenter2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('suspectedCaseMedicalCenter', value, 'commentMayerAreYou')\n            }}\n            value={status.suspectedCaseMedicalCenter.answer}\n            error={errors.suspectedCaseMedicalCenter}\n          />\n        </>\n        )}\n\n        {status['areYou'].show && status['commentMayerAreYou'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <MultiInput\n          title={t('commentMayer.question')}\n          onChange={(event) => {\n            handleQuestion('commentMayerAreYou', event.target.value, 'end')\n          }}\n          value={status.commentMayerAreYou.answer}\n          error={errors.commentMayerAreYou}\n        />\n        </>\n        )} \n\n        {\n        // 8.1 How long have become unemployed? \n        }\n        {status['unemployedPeriod'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('unemployedPeriod.question')}\n            options={[\n              { value: t('unemployedPeriod.options.unemployedPeriod1'), label: t('unemployedPeriod.options.unemployedPeriod1') },\n              { value: t('unemployedPeriod.options.unemployedPeriod2'), label: t('unemployedPeriod.options.unemployedPeriod2') },\n              { value: t('unemployedPeriod.options.unemployedPeriod3'), label: t('unemployedPeriod.options.unemployedPeriod3') },\n              { value: t('unemployedPeriod.options.unemployedPeriod4'), label: t('unemployedPeriod.options.unemployedPeriod4') }\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('unemployedPeriod', value, 'produceFood')\n            }}\n            value={status.unemployedPeriod.answer}\n            error={errors.unemployedPeriod}\n          />\n        </>\n        )}\n                                \n        {status['unemployedPeriod'].show && status['produceFood'].show && (\n        <>\n          <hr className=\"mb-5 mt-5\" />\n          <Question\n            title={t('produceFood.question')}\n            options={[\n              { value: t('produceFood.options.produceFood1'), label: t('produceFood.options.produceFood1') },\n              { value: t('produceFood.options.produceFood2'), label: t('produceFood.options.produceFood2') },\n            ]}\n            onChange={({ value }) => {\n              handleQuestion('produceFood', value, 'surviveMoney')\n            }}\n            value={status.produceFood.answer}\n            error={errors.produceFood}\n          />\n        </>\n        )}\n                        \n        {status['unemployedPeriod'].show && status['surviveMoney'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('surviveMoney.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <TextField \n              id=\"outlined-basic\" \n              style={{width: '100%'}}\n              variant=\"outlined\" \n              onChange={( event ) => {\n                \n                let {value} = event.target\n                let numberRegExp = /[0-9\\b]+$/;\n                if(value !== \"\" ) {\n                  if (!numberRegExp.test(value))\n                    return;\n                }\n                handleQuestion('surviveMoney', event.target.value, 'commentMayerUnemployedPeriod')\n              }}\n              value={status.surviveMoney.answer}\n              error={errors.surviveMoney}\n              required\n              />\n          </div>\n        </div>\n        </>\n        )}\n\n        {status['unemployedPeriod'].show && status['commentMayerUnemployedPeriod'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <MultiInput\n          title={t('commentMayer.question')}\n          onChange={(event) => {\n            handleQuestion('commentMayerUnemployedPeriod', event.target.value, 'end')\n          }}\n          value={status.commentMayerUnemployedPeriod.answer}\n          error={errors.commentMayerUnemployedPeriod}\n        />\n        </>\n        )} \n\n        {\n        // 9.1 How much money you receive monthly retirement? \n        }\n        {status['receiveMoney'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('receiveMoney.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <TextField \n              id=\"outlined-basic\" \n              style={{width: '100%'}}\n              variant=\"outlined\" \n              onChange={( event ) => {\n                \n                let {value} = event.target\n                let numberRegExp = /[0-9\\b]+$/;\n                if(value !== \"\" ) {\n                  if (!numberRegExp.test(value))\n                    return;\n                }\n                handleQuestion('receiveMoney', event.target.value, 'spendDrugs')\n              }}\n              value={status.receiveMoney.answer}\n              error={errors.receiveMoney}\n              required\n              />\n          </div>\n        </div>\n        </>\n        )}\n\n        {status['receiveMoney'].show && status['spendDrugs'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-12 col-lg-6\">\n            <p className=\"lead m-lg-0\">{t('spendDrugs.question')}</p>\n          </div>\n          <div className=\"col-12 col-lg-5\">\n            <TextField \n              id=\"outlined-basic\" \n              style={{width: '100%'}}\n              variant=\"outlined\" \n              onChange={( event ) => {\n                \n                let {value} = event.target\n                let numberRegExp = /[0-9\\b]+$/;\n                if(value !== \"\" ) {\n                  if (!numberRegExp.test(value))\n                    return;\n                }\n                handleQuestion('spendDrugs', event.target.value, 'commentMayerReceiveMoney')\n              }}\n              value={status.spendDrugs.answer}\n              error={errors.spendDrugs}\n              required\n              />\n          </div>\n        </div>\n        </>\n        )}\n\n        {status['receiveMoney'].show && status['commentMayerReceiveMoney'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <MultiInput\n          title={t('commentMayer.question')}\n          onChange={(event) => {\n            handleQuestion('commentMayerReceiveMoney', event.target.value, 'end')\n          }}\n          value={status.commentMayerReceiveMoney.answer}\n          error={errors.commentMayerReceiveMoney}\n        />\n        </>\n        )} \n\n        {\n        // 10.1 What would you like to tell the mayor Luis Yd?(The end process) \n        }\n        {/* {status['commentMayer'].show && (\n        <>\n        <hr className=\"mb-5 mt-5\" />\n        <MultiInput\n          title={t('commentMayer.question')}\n          onChange={(event) => {\n            handleQuestion('commentMayer', event.target.value, 'end')\n          }}\n          value={status.commentMayer.answer}\n          error={errors.commentMayer}\n        />\n        </>\n        )} */}\n\n\n        <hr className=\"mb-5 mt-5\" />\n        <button className=\"btn btn-primary\" type=\"submit\">\n          {t('submit')}\n        </button>\n      </form>\n    </FormBox>\n  )\n}\n\nexport default Form\n","import React, { useState, useReducer } from 'react'\r\n\r\nimport Question from '../components/SelectQuestion'\r\nimport InputQuestion from '../components/InputQuestion'\r\nimport FormBox from '../components/FormBox'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport {\r\n  Table\r\n} from 'reactstrap';\r\n\r\nimport {\r\n  NativeSelect,\r\n  TextField,\r\n} from '@material-ui/core';\r\n\r\nimport MultipleSelect from '../components/MultipleSelect'\r\n\r\nconst HealthCondition = ({ filledState = {}, setFormState, form }) => {\r\n  const sequence = [\r\n    'symptomsType',\r\n    'suspectedCase',\r\n    'suffering',\r\n    'diseaseMembers',\r\n    'regularVisitors',\r\n  ]\r\n\r\n  // takes an array of keys returns an object with keys and defaultStates\r\n  const createDefaultStates = (list, defaultState) =>\r\n    list.reduce((obj, item) => {\r\n      obj[item] = defaultState\r\n      return obj\r\n    }, {})\r\n\r\n  const [status, setStatus] = useReducer(\r\n    (state, newState) => {\r\n      return { ...state, ...newState }\r\n    },\r\n    {\r\n      [sequence[0]]: { show: true, answer: '' },\r\n      ...createDefaultStates(sequence.slice(1), { show: false, answer: '' }),\r\n      ...filledState\r\n    }\r\n  )\r\n\r\n  const [errors, setErrors] = useState(createDefaultStates(sequence, false))\r\n\r\n  const nextQuestion = (q, ...hide) => {\r\n    const defaultState = { show: false, answer: '' }\r\n    const i = sequence.indexOf(q)\r\n    const valuesToReset = createDefaultStates(sequence.slice(i), defaultState)\r\n\r\n    // if present: hide conditional question\r\n    hide.map(key => (valuesToReset[key] = defaultState))\r\n\r\n    setStatus({\r\n      ...valuesToReset,\r\n      [q]: { show: true, answer: '' }\r\n    })\r\n  }\r\n\r\n  const handleQuestion = (q, value, cbOrNextQ) => {\r\n    if (value === null) return nextQuestion(q)\r\n    setErrors({ ...errors, [q]: false })\r\n    setStatus({\r\n      [q]: { show: true, answer: value }\r\n    })\r\n    if (cbOrNextQ == null) return\r\n    else if (typeof cbOrNextQ === 'function') cbOrNextQ()\r\n    else nextQuestion(cbOrNextQ)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    // const newErrors = errors\r\n    // let errorPresent = false\r\n    // Object.entries(status).forEach(([key, value]) => {\r\n    //   if (value.show === true && value.answer === '') {\r\n    //     newErrors[key] = true\r\n    //     errorPresent = true\r\n    //   } else {\r\n    //     newErrors[key] = false\r\n    //     console.log(key + \" : \" + value.answer);\r\n    //   }\r\n    // })\r\n    // setErrors({ ...errors, newErrors })\r\n\r\n    // if (!errorPresent) {\r\n      setFormState({ ...form, ...status, progress: 2 })\r\n    // }\r\n  }\r\n\r\n  const { t } = useTranslation('healthCondition')\r\n\r\n  return (\r\n    <FormBox>\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        <>\r\n          <MultipleSelect\r\n            title={t('symptomsType.question')}\r\n            options={[\r\n                t('symptomsType.options.symptomsType1'),\r\n                t('symptomsType.options.symptomsType2'),\r\n                t('symptomsType.options.symptomsType3'),\r\n                t('symptomsType.options.symptomsType4'),\r\n                t('symptomsType.options.symptomsType5'),\r\n                t('symptomsType.options.symptomsType6'),\r\n                t('symptomsType.options.symptomsType7')\r\n            ]}\r\n            onChange={({ value }) => {\r\n              handleQuestion('symptomsType', value, 'suspectedCase')\r\n            }}\r\n            value={status.symptomsType.answer}\r\n            error={errors.symptomsType}\r\n          />\r\n        </>\r\n\r\n        {/* {status['suspectedCase'].show && ( */}\r\n        <>\r\n          <hr className=\"mb-5 mt-5\" />\r\n          <Question\r\n            title={t('suspectedCase.question')}\r\n            options={[\r\n              { value: 'suspectedCase1', label: t('suspectedCase.options.suspectedCase1') },\r\n              { value: 'suspectedCase2', label: t('suspectedCase.options.suspectedCase2') }\r\n            ]}\r\n            onChange={({ value }) => {\r\n              handleQuestion('suspectedCase', value, 'suffering')\r\n            }}\r\n            value={status.suspectedCase.answer}\r\n            error={errors.suspectedCase}\r\n          />\r\n        </>\r\n        {/* )} */}\r\n\r\n        {status['suffering'].show && (\r\n        <>\r\n          <hr className=\"mb-5 mt-5\" />\r\n          <Question\r\n            title={t('suffering.question')}\r\n            options={[\r\n              { value: 'suffering1', label: t('suffering.options.suffering1') },\r\n              { value: 'suffering2', label: t('suffering.options.suffering2') }\r\n            ]}\r\n            onChange={({ value }) => {\r\n              handleQuestion('suffering', value, 'diseaseMembers')\r\n            }}\r\n            value={status.suffering.answer}\r\n            error={errors.suffering}\r\n          />\r\n        </>\r\n        )}\r\n\r\n        {status['diseaseMembers'].show && (\r\n          <>\r\n            <hr className=\"mb-5 mt-5\" />\r\n            <Question\r\n              title={t('diseaseMembers.question')}\r\n              options={Array.from(Array(10)).map((_, i) => {\r\n                return {\r\n                  value: i,\r\n                  label: i\r\n                }\r\n              })}\r\n              onChange={({ value }) => {\r\n                handleQuestion('diseaseMembers', value, 'regularVisitors')\r\n              }}\r\n              value={status.diseaseMembers.answer}\r\n              error={errors.diseaseMembers}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        \r\n        {status['regularVisitors'].show && (\r\n          <>\r\n                <Table borderless responsive style={{marginTop: 70, marginBottom: 50}}>\r\n                  <thead>        \r\n                    <tr style={{backgroundColor: '#dcdcdc', color: 'grey', cursor: 'pointer' }}>\r\n                      <th style={{width: '5%', textAlign: 'center'}}>No</th>\r\n                      <th style={{width: '5%', textAlign: 'center'}}>Relation</th>\r\n                      <th style={{width: '30%', textAlign: 'center'}}>Age</th>\r\n                      <th style={{width: '30%', textAlign: 'center'}}>ID Number</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    \r\n                      <tr>\r\n                        <td style={{width: '5%', textAlign: 'center'}}>\r\n                          {1}\r\n                        </td>\r\n                        <td style={{width: '30%', textAlign: 'center'}}>\r\n                          <NativeSelect\r\n                            // onChange={this.handlePaymentOption}\r\n                            name=\"paymentOption\"\r\n                            className={{marginTop: 10}}\r\n                            inputProps={{ 'aria-label': 'age' }}\r\n                            style={{marginLeft: 30, fontSize: 18}}\r\n                          >\r\n                            <option value=\"\"> Select Relation </option>\r\n                            <option value=\"father\">Father</option>\r\n                            <option value=\"mother\">Mother</option>\r\n                            <option value=\"son\">Son</option>\r\n                            <option value=\"daughter\">Daughter</option>\r\n                            <option value=\"other\">Other</option>\r\n                          </NativeSelect>           \r\n                        </td>\r\n                        <td style={{width: '30%', textAlign: 'center'}}>\r\n                          <TextField\r\n                            fullWidth\r\n                            helperText=\"\"\r\n                            label=\"\"\r\n                            name=\"age\"\r\n                            placeholder=\"Age\"\r\n                            // onChange={this.payForMeHandleChange(idx)}\r\n                            required\r\n                            // value={item.url}\r\n                          />                        \r\n                        </td>\r\n                        <td style={{width: '30%', textAlign: 'center'}}>\r\n                          <TextField\r\n                            fullWidth\r\n                            helperText=\"\"\r\n                            label=\"\"\r\n                            name=\"idnumber\"\r\n                            placeholder=\"ID Number\"\r\n                            // onChange={this.payForMeHandleChange(idx)}\r\n                            required\r\n                            // value={item.url}\r\n                          />                        \r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n          </>\r\n        )}\r\n\r\n        {status['regularVisitors'].show && (\r\n          <>\r\n          <hr className=\"mb-5 mt-5\" />\r\n          <Question\r\n            title={t('regularVisitors.question')}\r\n            options={Array.from(Array(9)).map((_, i) => {\r\n              return {\r\n                value: i,\r\n                label: i\r\n              }\r\n            })}\r\n            onChange={({ value }) => {\r\n              handleQuestion('regularVisitors', value, '')\r\n            }}\r\n            value={status.regularVisitors.answer}\r\n            error={errors.regularVisitors}\r\n          />\r\n        </>\r\n        )}\r\n\r\n        <hr className=\"mb-5 mt-5\" />\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          {t('submit')}\r\n        </button>\r\n      </form>\r\n    </FormBox>\r\n  )\r\n}\r\n\r\nexport default HealthCondition\r\n","import React from 'react'\nimport { Lottie } from '@crello/react-lottie'\nimport * as checkData from '../lottie/check.json'\nimport styled from 'styled-components'\nimport { useTranslation, Trans } from 'react-i18next'\n\nconst Header = styled.header`\n  padding: 4.5rem 0px;\n  @media (max-width: 991px) {\n    padding-top: 1rem;\n  }\n`\n\nconst Justify = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-content: stretch;\n  align-items: stretch;\n`\n\nconst Success = ({ form }) => {\n  const { t } = useTranslation('formSuccess')\n  //\n  // TEXT\n  //\n\n  const text = {\n    alarm: t('alarm.message'),\n    alarmTitle: t('alarm.title'),\n    symptoms: t('symptoms.message'),\n    symptomsTitle: '',\n    exposure: t('exposure.message'),\n    exposureTitle: '',\n    noSymptoms: t('noSymptoms.message'),\n    noSymptomsTitle: '',\n    medical: t('medical.message'),\n    medicalTitle: ''\n  }\n\n  //\n  // Calculate the different states\n  // 1. symptoms\n  // 2. risk\n  // 4. exposure (contact)\n  //\n\n  const isYes = key => {\n    try {\n      return form[key].answer === 'yes'\n    } catch (e) {\n      return false\n    }\n  }\n\n  let symptoms = false\n  if (isYes('breath') || isYes('fever')) symptoms = true\n\n  let risk = false\n  if (isYes('riskGroup') || form.age.answer > 59) risk = true\n\n  let exposure = false\n  if (\n    isYes('professionalExposureWhileIll') ||\n    isYes('familyExposureWhileIll') ||\n    isYes('confirmedExposureWhileIll')\n  )\n    exposure = true\n\n  //\n  // THE ANSWER IS CALCULATED HERE\n  //\n  let msg = { others: [] }\n\n  if (isYes('alarmSigns')) {\n    msg.title = t('alarm.title')\n    msg.result = 'formSuccess:alarm:message'\n    msg.bar = 90\n  } else if (symptoms) {\n    if (form.age.answer > 59) msg.title = t('symptoms.title60')\n    else msg.title = t('symptoms.title')\n    msg.result = 'formSuccess:symptoms:message'\n    msg.bar = 65\n    if (risk) msg.others.push(<strong>{t('symptoms.risk')}</strong>)\n    else msg.others.push(t('symptoms.noRisk'))\n  } else {\n    msg.title = t('noSymptoms.title')\n    if (exposure) {\n      msg.result = 'formSuccess:noSymptoms:exposure'\n    } else {\n      msg.result = 'formSuccess:noSymptoms:message'\n    }\n    msg.bar = 30\n    if (risk) msg.others.push(<strong>{t('noSymptoms.risk')}</strong>)\n  }\n\n  if (isYes('healthProfessional')) msg.medical = true\n  if (risk) msg.risk = true\n\n  return (\n    <>\n      <Header className=\"fdb-block\">\n        <div className=\"container\">\n          <Disclaimer>\n            <h2>{t('evaluationResult.title')}</h2>\n            <p className=\"\">\n              <Trans i18nKey=\"warnDisclaimer\" />\n            </p>\n          </Disclaimer>\n          <div className=\"row text-left\">\n            <div className=\"col-10 col-sm-6 m-auto m-lg-0 col-lg-2\">\n              <Lottie\n                width={'15rem'}\n                height={'15rem'}\n                config={{\n                  animationData: checkData.default\n                }}\n                className=\"d-none d-lg-block\"\n                style={{ margin: '0 auto' }}\n                speed=\"0.3\"\n              />\n            </div>\n            <div className=\"col-12 col-lg-8 offset-lg-1\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <h2>\n                    <strong>{msg.title}</strong>\n                  </h2>\n                  <Justify>\n                    <div className=\"pb-3\">\n                      <Progress\n                        value={msg.bar}\n                        style={msg.bar > 30 ? 'danger' : 'warning'}\n                      />\n                    </div>\n                    <div>\n                      <Trans i18nKey={msg.result}>\n                        <p className=\"lead\"></p>\n                        <p></p>\n                        <p></p>\n                        <p></p>\n                      </Trans>\n                    </div>\n                    {/* <p className=\"lead\">{msg.result}</p> */}\n                  </Justify>\n\n                  {msg.others.map(m => (\n                    <p>{m}</p>\n                  ))}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  {risk && (\n                    <>\n                      <p className=\"mb-0\">{t('risk.message')}</p>\n                      <ul>\n                        <li>{t('risk.list1')}</li>\n                        <li>{t('risk.list2')}</li>\n                      </ul>\n                    </>\n                  )}\n                  {isYes('pregnant') && symptoms && (\n                    <p>{t('symptoms.pregnant')}</p>\n                  )}\n                  {isYes('pregnant') && !symptoms && (\n                    <>\n                      <p className=\"mb-0\">{t('noSymptoms.pregnant.message')}</p>\n                      <ul>\n                        <li>{t('noSymptoms.pregnant.list1')}</li>\n                        <li>{t('noSymptoms.pregnant.list2')}</li>\n                      </ul>\n                    </>\n                  )}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col text-left\">\n                  {msg.medical && (\n                    <>\n                      <h2>{t('medical.title')}</h2>\n                      <p className=\"mb-0\">{t('medical.message')}</p>\n\n                      <ul>\n                        <li>{t('medical.list1')}</li>\n                        <li>{t('medical.list2')}</li>\n                      </ul>\n                      <p>{msg.medical}</p>\n                    </>\n                  )}\n                  <h2>{t('general.title')}</h2>\n                  <ul>\n                    <li>{t('general.list1')}</li>\n                    <li>{t('general.list2')}</li>\n                    <li>{t('general.list3')}</li>\n                    <li>{t('general.list4')}</li>\n                    <li>{t('general.list5')}</li>\n                    <li>{t('general.list6')}</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Header>\n\n      <section className=\"fdb-block pt-0\">\n        <div className=\"container\"></div>\n      </section>\n    </>\n  )\n}\n\nconst ProgressBar = styled.div`\n  width: 20px;\n  min-height: 100%;\n  display: flex;\n  align-items: flex-end;\n  margin-right: 20px;\n  float: left;\n  & .progress-bar {\n    width: 100%;\n    height: 0;\n    -webkit-transition: height 0.6s ease;\n    -o-transition: height 0.6s ease;\n    transition: height 0.6s ease;\n  }\n`\n\nconst Progress = ({ value, style }) => {\n  return (\n    <ProgressBar className=\"progress progress-bar-vertical\">\n      <div\n        className={`progress-bar bg-${style}`}\n        role=\"progressbar\"\n        aria-valuenow={value}\n        aria-valuemin={0}\n        aria-valuemax={100}\n        style={{ height: `${value}%` }}\n      >\n        <span className=\"sr-only\">{value}% Complete</span>\n      </div>\n    </ProgressBar>\n  )\n}\n\nconst RedBox = styled.div`\n  border-top: solid 0.3125rem red;\n  z-index: 2;\n  padding: 0.75rem 0.5rem !important;\n`\n\nconst Disclaimer = ({ children }) => {\n  return (\n    <div className=\"row pb-5\">\n      <div className=\"col\">\n        <RedBox className=\"fdb-box\">\n          <div className=\"row text-center justify-content-center\">\n            <div className=\"col-12 col-md-9 col-lg-7\">{children}</div>\n          </div>\n        </RedBox>\n      </div>\n    </div>\n  )\n}\nexport default Success\n","import React, { useCallback, useRef } from 'react'\nimport AsyncSelect from 'react-select/async'\nimport { debounce } from 'lodash'\n\nconst Component = ({ onChange, value, onCoords }) => {\n  const autocomplete = useRef()\n  const geocoder = useRef()\n\n  if (!autocomplete.current) {\n    autocomplete.current = new window.google.maps.places.AutocompleteService()\n  }\n  if (!geocoder.current) {\n    geocoder.current = new window.google.maps.Geocoder()\n  }\n\n  function getPlacePredictions(input, callback) {\n    if (!input) return callback(null)\n    autocomplete.current.getPlacePredictions(\n      {\n        input: input,\n        types: ['(regions)'],\n        componentRestrictions: { country: 'py' }\n      },\n      predictions => {\n        if (!predictions) return callback(null)\n        callback(\n          predictions.map(prediction => {\n            return { value: prediction.place_id, label: prediction.description }\n          })\n        )\n      }\n    )\n  }\n\n  const onChangeWithCoords = selected => {\n    onChange(selected)\n\n    if (selected) {\n      function callback(places, status) {\n        onCoords({\n          bounds: places[0].geometry.bounds.toJSON(),\n          location: places[0].geometry.location.toJSON()\n        })\n      }\n\n      geocoder.current.geocode({ placeId: selected.value }, callback)\n    }\n  }\n\n  const debouncedGetPlacePredictions = useCallback(\n    debounce(getPlacePredictions, 500),\n    []\n  )\n\n  return (\n    <AsyncSelect\n      loadOptions={debouncedGetPlacePredictions}\n      defaultOptions\n      // onInputChange={i => console.log(i)}\n      onChange={onChangeWithCoords}\n      isClearable={true}\n      noOptionsMessage={i =>\n        !i.inputValue\n          ? 'Por favor, escriba para encontrar su vecindario o ciudad.'\n          : 'No hay coincidencias'\n      }\n      placeholder=\"Seleccionar ...\"\n      value={value}\n    />\n  )\n}\n\nexport default Component\n","import React, { useState, useReducer } from 'react'\nimport { useTranslation, Trans } from 'react-i18next'\n\nimport FormBox from '../components/FormBox'\nimport Question from '../components/SelectQuestion'\nimport SelectPlace from '../components/SelectPlace'\n\nconst Person = ({ setFormState, filledState = {}, form }) => {\n  const sequence = ['serious', 'location']\n  // takes an array of keys returns an object with keys and defaultStates\n  const createDefaultStates = (list, defaultState) =>\n    list.reduce((obj, item) => {\n      obj[item] = defaultState\n      return obj\n    }, {})\n\n  const [status, setStatus] = useReducer(\n    (state, newState) => {\n      return { ...state, ...newState }\n    },\n    {\n      [sequence[0]]: { show: true, answer: '' },\n      ...createDefaultStates(sequence.slice(1), {\n        show: false,\n        answer: ''\n      }),\n      ...filledState\n    }\n  )\n\n  const [errors, setErrors] = useState(createDefaultStates(sequence, false))\n  const [disabledButton, setDisabledButton] = useState(false)\n  const [submitError, setSubmitError] = useState(false)\n\n  const nextQuestion = (q, hide) => {\n    const defaultState = { show: false, answer: '' }\n    const i = sequence.indexOf(q)\n    const valuesToReset = createDefaultStates(sequence.slice(i), defaultState)\n\n    // if present: hide conditional question\n    if (hide) valuesToReset[hide] = defaultState\n\n    setStatus({\n      ...valuesToReset,\n      [q]: { show: true, answer: '' }\n    })\n  }\n\n  const handleCoords = geocode => setStatus({ geocode })\n\n  const handleQuestion = (q, value, cbOrNextQ) => {\n    if (value === null) return nextQuestion(q)\n    setErrors({ ...errors, [q]: false })\n    setStatus({\n      [q]: { show: true, answer: value }\n    })\n    if (cbOrNextQ == null) return\n    else if (typeof cbOrNextQ === 'function') cbOrNextQ()\n    else nextQuestion(cbOrNextQ)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setDisabledButton(true)\n\n    const errorPresent = checkErrors()\n    if (!errorPresent) {\n      postForm()\n    } else {\n      setDisabledButton(false)\n    }\n  }\n\n  const postForm = async () => {\n    try {\n      const firestoreDocument = {\n        ...form,\n        ...status,\n      }\n    } catch (error) {\n      console.log(error)\n      setDisabledButton(false)\n      setSubmitError(true)\n    }\n  }\n\n  const checkErrors = () => {\n    let errorPresent = false\n    const newErrors = errors\n\n    if (status.serious.answer === '') {\n      newErrors.serious = true\n      errorPresent = true\n    } else newErrors.serious = false\n\n    if (status.location.answer === '' && status.location.show === true) {\n      newErrors.location = true\n      errorPresent = true\n    } else newErrors.location = false\n\n    // if (!(status.phone.answer === '' || status.phone.answer.length > 8)) {\n    //   newErrors.phone = true\n    //   errorPresent = true\n    // } else\n    newErrors.phone = false\n\n    setErrors({ ...errors, newErrors })\n\n    return errorPresent\n  }\n\n  const { t } = useTranslation('person')\n\n  return (\n    <FormBox>\n      <form onSubmit={handleSubmit}>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 col-md-8 text-center\">\n            <h1>{t('title')}</h1>\n            <p className=\"lead\">{t('subTitle')}</p>\n            <Trans i18nKey=\"person:paragraph\">\n              <p></p>\n              <p></p>\n            </Trans>\n            <hr className=\"mb-5 mt-5\" />\n          </div>\n        </div>\n\n        <Question\n          title={t('serious.question')}\n          options={[\n            {\n              value: 'report',\n              label: t('serious.options.report')\n            },\n            {\n              value: 'tryout',\n              label: t('serious.options.tryout')\n            }\n          ]}\n          onChange={({ value }) => {\n            handleQuestion('serious', value, 'location')\n          }}\n          value={status.serious.answer}\n          error={errors.serious}\n        />\n\n        {status['location'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <div className=\"row justify-content-center align-items-center\">\n              <div className=\"col-12 col-lg-6\">\n                <p className=\"lead m-lg-0\">{t('location.title')}</p>\n                <p className=\"m-lg-0\">{t('location.subTitle')}</p>\n              </div>\n              <div className=\"col-12 col-lg-5\">\n                <SelectPlace\n                  onChange={value => {\n                    handleCoords('loading or null')\n                    handleQuestion('location', value)\n                  }}\n                  onCoords={handleCoords}\n                  value={status.location.answer}\n                />\n                {errors.location && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {t('location.pleaseChoose')}\n                  </div>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n        {/* {status['phone'].show && (\n          <>\n            <hr className=\"mb-5 mt-5\" />\n            <div className=\"row justify-content-center align-items-center\">\n              <div className=\"col-12 col-lg-6\">\n                <p className=\"lead m-lg-0\">{t('phone.title')}</p>\n                <p className=\"m-lg-0\">{t('phone.subTitle')}</p>\n              </div>\n              <div className=\"col-12 col-lg-5\">\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  placeholder=\"09xxxxxxxx\"\n                  value={status.phone.answer}\n                  onChange={({ target }) => {\n                    handleQuestion('phone', target.value)\n                  }}\n                  value={status.phone.answer}\n                />\n                {errors.phone && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {t('phone.pleaseChoose')}\n                  </div>\n                )}\n              </div>\n            </div>\n          </>\n        )} */}\n        <hr className=\"mb-5 mt-5\" />\n        <button\n          className=\"btn btn-primary\"\n          type=\"submit\"\n          disabled={disabledButton}\n        >\n          {disabledButton && <i className=\"fas fa-spinner fa-pulse mr-3\"></i>}\n          {t('submit')}\n        </button>\n        {submitError && (\n          <p style={{ color: 'red', padding: 5 }}>{t('error')}</p>\n        )}\n      </form>\n    </FormBox>\n  )\n}\n\nexport default Person\n","import React, { PureComponent } from 'react'\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts'\n\nvar data = null\n\nexport default class AlignmentChart extends PureComponent {\n  // static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/'\n\n  constructor() {\n    super()\n    this.state = {\n      data: [],\n      loaded: false,\n      colours: [\n        '#F78378',\n        '#FB8599',\n        '#F18FBA',\n        '#DA9FD6',\n        '#B7B0EA',\n        '#8BC1F1',\n        '#5CCEEA',\n        '#3BD9D7',\n        '#4AE0BB',\n        '#73E49B',\n        '#A0E57C',\n        '#CEE164'\n      ]\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://penguin-utility-server.herokuapp.com/covid19/alignment.json')\n      .then(response => response.json())\n      .then(jsonData => {\n        // jsonData is parsed json object received from url\n        this.setState({ data: jsonData })\n        this.setState({ loaded: true })\n      })\n      .catch(error => {\n        // handle your errors here\n        console.error(error)\n      })\n  }\n\n  render() {\n    if (this.state.loaded == false)\n      return (\n        <h2 className=\"text-center m-5\">\n          <i className=\"fas fa-spinner fa-pulse mr-3\"></i>\n          loading...\n        </h2>\n      )\n    else\n      return (\n        <div style={{ width: '100%', height: 450 }}>\n          <ResponsiveContainer>\n            <LineChart\n              data={this.state.data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis\n                dataKey=\"x\"\n                type=\"number\"\n                allowDuplicatedCategory={false}\n              />\n              <YAxis dataKey=\"y\" type=\"number\" />\n              <Tooltip />\n              <Legend\n                layout=\"vertical\"\n                align=\"right\"\n                verticalAlign=\"top\"\n                wrapperStyle={{ marginRight: '-10px' }}\n              />\n              {this.state.data.country_data.map((s, i) => (\n                <Line\n                  dataKey=\"y\"\n                  dot={false}\n                  data={s.data}\n                  name={s.name + ' (' + s.offset + ' detrás de Brasil)'}\n                  stroke={this.state.colours[i]}\n                  key={s.name}\n                />\n              ))}\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport * as d3 from \"d3\";\n\nvar data = null\n\nexport default class PyChart extends React.Component {\n\n    componentDidMount() {\n        // D3 Code to create the chart\n        // using this._rootNode as container\n        var margin = {\n              top: 20,\n              right: 20,\n              bottom: 80,\n              left: 50\n            };\n        var width = 600 - margin.left - margin.right,\n            height = 400 - margin.top - margin.bottom,\n            width_all = width + margin.left + margin.right,\n            height_all = height + margin.top + margin.bottom;\n        var keys = ['Casos Confirmados', 'Predicción', 'Modelo Logístico'];\n        var colours = ['lightsteelblue', 'rgb(249, 93, 11)', '#BF215B'],\n            colScale = d3.scaleOrdinal().range(colours);\n        var svg = d3.select(this._rootNode).append('svg')\n          .attr('width', width + margin.left + margin.right)\n          .attr('height', height + margin.top + margin.bottom)\n          .attr('id', 'svg-viz')\n          .append(\"g\")\n          .attr(\"transform\", \n            \"translate(\" + margin.left + \",\" + margin.top + \")\");;\n\n        var x = d3.scaleBand()\n          .rangeRound([0, width])\n          .padding(0.1);\n\n        var y = d3.scaleLinear()\n          .rangeRound([height, 0]);\n\n        d3.json('https://covidpy-rest.herokuapp.com/logistic')\n          .then((data)=>{\n            x.domain(data.dates);\n            y.domain([0, d3.max(data.estimate)]);\n            \n            svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x))\n            .selectAll(\"text\")\n            .attr('y',0)\n            .attr('x',-10)\n            .attr(\"dy\", \".35em\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .style(\"text-anchor\", \"end\");\n\n            svg.append(\"g\")\n            .call(d3.axisLeft(y))\n            .append(\"text\")\n            .attr(\"fill\", \"#000\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 6)\n            .attr(\"dy\", \"0.71em\")\n            .attr(\"text-anchor\", \"end\")\n            .text(\"Casos\");\n\n            svg.selectAll(\".bar\")\n            .data(data.confirmed)\n            .enter().append(\"rect\")\n            .attr(\"class\", \"confirmed\")\n            .attr(\"x\", (d, i) => x(data.dates[i]))\n            .attr(\"y\", (d) => y(d))\n            .attr(\"width\", x.bandwidth())\n            .attr(\"height\", (d) => height - y(d))\n            .style('fill',colours[0])\n            .on('mouseover', (d,i) => d3.select('#confirmed-'+i).style('opacity',1))\n            .on('mouseout', (d,i) => d3.select('#confirmed-'+i).style('opacity',0));\n\n            svg.selectAll(\".bar\")\n            .data(data.projected)\n            .enter().append(\"rect\")\n            .attr(\"class\", \"projected\")\n            .attr(\"x\", (d, i) => x(data.dates[i]))\n            .attr(\"y\", (d) => y(d))\n            .attr(\"width\", x.bandwidth())\n            .attr(\"height\", (d) => height - y(d))\n            .style('fill',colours['1'])\n            .on('mouseover', (d,i) => d3.select('#projected-'+i).style('opacity',1))\n            .on('mouseout', (d,i) => d3.select('#projected-'+i).style('opacity',0));\n\n            svg.append(\"path\")\n            .datum(data.estimate)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", colours[2])\n            .attr(\"stroke-width\", 2.5)\n            .attr(\"d\", d3.line()\n                .x((d,i) => x(data.dates[i])+x.bandwidth()/2)\n                .y((d) => y(d))\n            );\n\n            svg\n            .selectAll('.text')\n            .attr(\"text-anchor\", \"center\")\n            .data(data.confirmed)\n            .enter().append('text')\n            .attr('id', (d,i) => d > 0?'confirmed-'+i:'projected-'+i)\n            .attr('x', (d, i) => x(data.dates[i]))\n            .attr('y', (d, i) => (d > 0?y(d):y(data.projected[i]))-10)\n            .text((d, i) => d > 0?d:data.projected[i])\n            .style('opacity',0)\n            .style('fill', (d) => d>0? colours[0]:colours[1]);\n\n            var legend = svg.append(\"g\")\n                         .attr(\"font-family\", \"sans-serif\")\n                         .attr(\"font-size\", 15)\n                         //.attr(\"text-anchor\", \"end\")\n                         .selectAll(\"g\")\n                         .data(['Casos Confirmados', 'Predicción', 'Modelo Logístico'])\n                         .enter().append(\"g\")\n                         .attr(\"transform\", (d, i) => \"translate(0,\" + (i * 22 + height_all/16) + \")\");\n            \n            legend.append(\"rect\")\n                  .attr(\"x\", 50)\n                  .attr(\"width\", 19)\n                  .attr(\"height\", 19)\n                  .attr(\"fill\", colScale);\n\n            legend.append(\"text\")\n                  .attr(\"x\", 73)\n                  .attr(\"y\", 9.5)\n                  .attr(\"dy\", \"0.32em\")\n                  .text((d) => d);\n          });\n        \n    }\n\n    shouldComponentUpdate() {\n        // Prevents component re-rendering\n        return false;\n    }\n\n    _setRef(componentNode) {\n        this._rootNode = componentNode;\n    }\n\n    render() {\n      return(\n        <div className=\"line-container\" ref={this._setRef.bind(this)} height=\"600\"/>\n      )\n    }\n}","// @ts-check\n\nimport React, { useState, useEffect } from 'react'\nimport { BrowserRouter, Switch, Route, useHistory } from 'react-router-dom'\nimport store from './store'\nimport {Provider} from 'react-redux'\nimport i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\nimport Home from './layouts/Home'\nimport Login from './layouts/Login'\nimport Admin from './layouts/dataTable'\nimport Score from './layouts/score'\nimport NavigationBar from './components/NavigationBar'\nimport Footer from './components/Footer'\nimport Start from './layouts/Start'\nimport Form from './layouts/Form'\nimport HealthCondition from './layouts/HealthCondition'\nimport Success from './layouts/Success'\nimport Legal from './layouts/Legal'\nimport About from './layouts/About'\nimport Quizz from './layouts/Quizz'\nimport Person from './layouts/Person'\nimport Stats from './layouts/Stats'\n\nimport './App.css'\n\nimport es from './i18n/es.json'\n\nimport { getSurveyData,getCSV,getScore } from './actions'\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    defaultNS: 'translation',\n    fallbackNS: 'translation',\n    resources: {\n      es,\n    },\n    fallbackLng: 'es',\n    debug: process.env.NODE_ENV !== 'production',\n    interpolation: {\n      escapeValue: false\n    }\n  })\n\nfunction App() {\n  const [form, setForm] = useState({ progress: 0 })\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [form.progress])\n  store.dispatch(getSurveyData());\n  store.dispatch(getCSV());\n  store.dispatch(getScore());\n  return (\n    <div className=\"App\">\n      <Provider store = {store}>\n      <BrowserRouter>\n        <ScrollToTop formReset={setForm}>\n          <NavigationBar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/admin\" exact component={Admin} />\n            <Route path=\"/score\" exact component={Score} />\n            <Route path=\"/report\" exact>\n              <Protected level={0} current={form.progress}>\n                <Form form={form} setFormState={setForm} />\n              </Protected>\n              <Protected level={1} current={form.progress}>\n                <HealthCondition form={form} setFormState={setForm} />\n              </Protected>\n              <Protected level={2} current={form.progress}>\n                <Person form={form} setFormState={setForm} />\n              </Protected>\n              <Protected level={3} current={form.progress}>\n                <Success form={form} />\n              </Protected>\n            </Route>\n\n            {/* <Route path=\"/legal\" exact component={Legal} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/quizz\" exact component={Quizz} />\n            <Route path=\"/stats\" exact component={Stats} /> */}\n          </Switch>\n          <Footer />\n        </ScrollToTop>\n      </BrowserRouter>\n      </Provider>\n    </div>\n  )\n}\n\n/** @type {React.FC<{ formReset(param: { progress: 0 }): void }>} */\nconst ScrollToTop = ({ children, formReset }) => {\n  const history = useHistory()\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      formReset({ progress: 0 })\n      window.scrollTo(0, 0)\n    })\n    return () => unlisten()\n  }, [history, formReset])\n\n  return <>{children}</>\n}\n\nexport default App\n\n/** @type {React.FC<{ level: number; current: number }>} */\nconst Protected = ({ level, current, children }) => (\n  <>{level === current ? children : ''}</>\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// @ts-check\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}